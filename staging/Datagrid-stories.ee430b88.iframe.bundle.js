"use strict";(self.webpackChunk_carbon_ibm_cloud_cognitive_core=self.webpackChunk_carbon_ibm_cloud_cognitive_core||[]).push([[4023],{"../ibm-products/src/components/Datagrid/Datagrid.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ActionsDropdown:()=>ActionsDropdown,BasicUsage:()=>BasicUsage,BatchActions:()=>BatchActions,DisableSelectRow:()=>DisableSelectRow,EmptyState:()=>EmptyState,FrozenColumns:()=>FrozenColumns,HideSelectAll:()=>HideSelectAll,InfiniteScroll:()=>InfiniteScroll,InitialLoad:()=>InitialLoad,Pagination:()=>Pagination,RadioSelect:()=>RadioSelect,SelectableRow:()=>SelectableRow,Skeleton:()=>Skeleton,SortableColumns:()=>SortableColumns,WithVirtualizedData:()=>WithVirtualizedData,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Datagrid_stories,getBatchActions:()=>getBatchActions});var react=__webpack_require__("../../node_modules/react/index.js"),makeData=__webpack_require__("../ibm-products/src/components/Datagrid/utils/makeData.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs"),bucket_0=__webpack_require__("../../node_modules/@carbon/icons-react/es/generated/bucket-0.js"),es=__webpack_require__("../../node_modules/@carbon/react/es/index.js"),bucket_5=__webpack_require__("../../node_modules/@carbon/icons-react/es/generated/bucket-5.js"),bucket_16=__webpack_require__("../../node_modules/@carbon/icons-react/es/generated/bucket-16.js"),Datagrid=__webpack_require__("../ibm-products/src/components/Datagrid/Datagrid/Datagrid.js");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var getAutoSizedColumnWidth=function getAutoSizedColumnWidth(rows,accessor,headerText){var cellLength=Math.max.apply(Math,_toConsumableArray(rows.map((function(row){return("".concat(row[accessor])||"").length}))).concat([headerText.length]));return cellLength<=3?58:Math.min(400,10*cellLength+16)},useDatagrid=__webpack_require__("../ibm-products/src/components/Datagrid/useDatagrid.js"),debounce=__webpack_require__("../../node_modules/lodash/debounce.js"),debounce_default=__webpack_require__.n(debounce);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function useParentDimensions_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return useParentDimensions_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return useParentDimensions_arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function useParentDimensions_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}const Datagrid_useParentDimensions=function useParentDimensions(hooks){var rootRef=(0,react.useRef)(),headRef=(0,react.useRef)(),innerListRef=(0,react.useRef)(),listRef=(0,react.useRef)(),gridRef=(0,react.useRef)(),_useState2=_slicedToArray((0,react.useState)(),2),tableHeight=_useState2[0],setTableHeight=_useState2[1];hooks.useInstance.push((function useInstance(instance){var DatagridActions=instance.DatagridActions,DatagridBatchActions=instance.DatagridBatchActions,totalColumnsWidth=instance.totalColumnsWidth,DatagridPagination=instance.DatagridPagination;Object.assign(instance,{tableHeight,rootRef,headRef,innerListRef,handleResize:function handleResize(){var parent=rootRef&&rootRef.current&&rootRef.current.parentElement;if(parent){var parentHeight=parent.clientHeight,parentWidth=parent.clientWidth,headHeight=headRef&&headRef.current&&headRef.current.clientHeight,parentStyles=window.getComputedStyle(parent),parentMarginBottom=parseFloat(parentStyles.getPropertyValue("margin-bottom")),parentPaddingBottom=parseFloat(parentStyles.getPropertyValue("padding-bottom")),parentMarginTop=parseFloat(parentStyles.getPropertyValue("margin-top")),parentPaddingTop=parseFloat(parentStyles.getPropertyValue("padding-top"));setTableHeight(parentHeight-headHeight-parentMarginBottom-parentPaddingBottom-parentMarginTop-parentPaddingTop-(DatagridActions||DatagridBatchActions?48:0)-(DatagridPagination?48:0)-(parentWidth<totalColumnsWidth?16:0))}},listRef,gridRef})}))};const Datagrid_useResizeTable=function useResizeTable(hooks){hooks.useInstanceBeforeDimensions.push((function useInstanceBeforeDimensions(instance){var rootRef=instance.rootRef,handleResize=instance.handleResize,parent=rootRef&&rootRef.current&&rootRef.current.parentElement;(0,react.useLayoutEffect)((function(){if(!parent)return function(){};if(handleResize(),"function"==typeof ResizeObserver){var resizeObserver=new ResizeObserver((function(){handleResize()}));return resizeObserver.observe(parent),function(){resizeObserver.disconnect(parent),resizeObserver=null}}return console.error("Could not resize table, no support for ResizeObserver")}),[handleResize,parent])}))};const Datagrid_useInfiniteScroll=function useInfiniteScroll(hooks){Datagrid_useParentDimensions(hooks),Datagrid_useResizeTable(hooks);hooks.useInstance.push((function useInstance(instance){var _tableElement,tableElement,isFetching=instance.isFetching,tableHeight=instance.tableHeight,innerListRef=instance.innerListRef,fetchMoreData=instance.fetchMoreData,tableId=instance.tableId,loadMoreThreshold=instance.loadMoreThreshold;"undefined"!=typeof document&&(tableElement=document.querySelector("#".concat(tableId)));var totalTableHeight=tableHeight||(null===(_tableElement=tableElement)||void 0===_tableElement?void 0:_tableElement.clientHeight),loadMoreThresholdValue="number"==typeof loadMoreThreshold?loadMoreThreshold:200,fetchMore=(0,react.useCallback)(debounce_default()(fetchMoreData||function emptyFetchData(){},3e3,{leading:!0,trailing:!1}),[fetchMoreData]);Object.assign(instance,{onScroll:function onScroll(_ref){var scrollDirection=_ref.scrollDirection,scrollOffset=_ref.scrollOffset;innerListRef&&innerListRef.current&&!isFetching&&"forward"===scrollDirection&&scrollOffset+totalTableHeight>=innerListRef.current.clientHeight-loadMoreThresholdValue&&fetchMoreData&&fetchMore()},withVirtualScroll:!0})}))};var updateSelectAll=function updateSelectAll(hooks){hooks.getToggleAllRowsSelectedProps.push((function getToggleAllRowsSelectedProps(props,_ref2){var _instance$disableSele,instance=_ref2.instance,selectableRows=instance.rows.filter((function(row){return!(instance.shouldDisableSelectRow&&instance.shouldDisableSelectRow(row))})),isAllRowsSelected=selectableRows.length>0&&selectableRows.every((function(_ref3){var id=_ref3.id;return instance.state.selectedRowIds[id]}));return[props,{onChange:function onChange(e){selectableRows.forEach((function(row){return row.toggleRowSelected(e.target.checked)}))},style:{cursor:"pointer"},checked:isAllRowsSelected,disabled:instance.disableSelectAll,title:(null==instance||null===(_instance$disableSele=instance.disableSelectRowsProps)||void 0===_instance$disableSele||null===(_instance$disableSele=_instance$disableSele.labels)||void 0===_instance$disableSele?void 0:_instance$disableSele.toggleAllRowsLabel)||"Toggle All Rows Selected",indeterminate:Boolean(!isAllRowsSelected&&Object.keys(instance.state.selectedRowIds).length)}]}))},updatePageSelectAll=function updatePageSelectAll(hooks){hooks.getToggleAllPageRowsSelectedProps.push((function getToggleAllPageRowsSelectedProps(props,_ref4){var _instance$disableSele2,instance=_ref4.instance,selectableRows=instance.page.filter((function(row){return!(instance.shouldDisableSelectRow&&instance.shouldDisableSelectRow(row))})),isAllRowsSelected=selectableRows.length>0&&selectableRows.every((function(_ref5){var id=_ref5.id;return instance.state.selectedRowIds[id]}));return[props,{onChange:function onChange(e){selectableRows.forEach((function(row){return row.toggleRowSelected(e.target.checked)}))},style:{cursor:"pointer"},checked:isAllRowsSelected,disabled:instance.disableSelectAll,title:(null==instance||null===(_instance$disableSele2=instance.disableSelectRowsProps)||void 0===_instance$disableSele2||null===(_instance$disableSele2=_instance$disableSele2.labels)||void 0===_instance$disableSele2?void 0:_instance$disableSele2.toggleAllRowsLabel)||"Toggle All Rows Selected",indeterminate:Boolean(!isAllRowsSelected&&instance.page.some((function(_ref6){var id=_ref6.id;return instance.state.selectedRowIds[id]})))}]}))};const Datagrid_useDisableSelectRows=function useDisableSelectRows(hooks){updateSelectAll(hooks),updatePageSelectAll(hooks);hooks.getRowProps.push((function getRowProps(props,_ref){var row=_ref.row,instance=_ref.instance;return[props,{disabled:instance.shouldDisableSelectRow&&instance.shouldDisableSelectRow(row)}]}))};var useSelectRows=__webpack_require__("../ibm-products/src/components/Datagrid/useSelectRows.js"),useStickyColumn=__webpack_require__("../ibm-products/src/components/Datagrid/useStickyColumn.js"),useSortableColumns=__webpack_require__("../ibm-products/src/components/Datagrid/useSortableColumns.js"),useActionsColumn=__webpack_require__("../ibm-products/src/components/Datagrid/useActionsColumn.js"),classnames=__webpack_require__("../../node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),common_column_ids=__webpack_require__("../ibm-products/src/components/Datagrid/common-column-ids.js"),prop_types=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),bucket_1=__webpack_require__("../../node_modules/@carbon/icons-react/es/generated/bucket-1.js"),settings=__webpack_require__("../ibm-products/src/settings.js"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}var _excluded=["onChange"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!==_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function DatagridSelectAllWithToggle_slicedToArray(arr,i){return function DatagridSelectAllWithToggle_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function DatagridSelectAllWithToggle_iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function DatagridSelectAllWithToggle_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return DatagridSelectAllWithToggle_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return DatagridSelectAllWithToggle_arrayLikeToArray(o,minLen)}(arr,i)||function DatagridSelectAllWithToggle_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function DatagridSelectAllWithToggle_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var blockClass="".concat(settings.K.prefix,"--datagrid"),SelectAllWithToggle=function SelectAllWithToggle(_ref){var _columns$,tableId=_ref.tableId,isFetching=_ref.isFetching,isAllRowsSelected=_ref.isAllRowsSelected,selectAllToggle=_ref.selectAllToggle,getToggleAllPageRowsSelectedProps=_ref.getToggleAllPageRowsSelectedProps,getToggleAllRowsSelectedProps=_ref.getToggleAllRowsSelectedProps,_ref$allPageRowsLabel=_ref.allPageRowsLabel,allPageRowsLabel=void 0===_ref$allPageRowsLabel?"Select all on page":_ref$allPageRowsLabel,_ref$allRowsLabel=_ref.allRowsLabel,allRowsLabel=void 0===_ref$allRowsLabel?"Select all":_ref$allRowsLabel,columns=_ref.columns,withStickyColumn=_ref.withStickyColumn,_ref2=selectAllToggle||{},onSelectAllRows=_ref2.onSelectAllRows,labels=_ref2.labels,_useState2=DatagridSelectAllWithToggle_slicedToArray((0,react.useState)("pageRows"),2),selectAllMode=_useState2[0],setSelectAllMode=_useState2[1];(0,react.useEffect)((function(){onSelectAllRows&&onSelectAllRows(isAllRowsSelected&&"allRows"===selectAllMode)}),[isAllRowsSelected,selectAllMode,onSelectAllRows]);var _useState4=DatagridSelectAllWithToggle_slicedToArray((0,react.useState)(window.innerWidth),2),windowSize=_useState4[0],setWindowSize=_useState4[1];(0,react.useLayoutEffect)((function(){function updateSize(){setWindowSize(window.innerWidth)}return window.addEventListener("resize",updateSize),function(){return window.removeEventListener("resize",updateSize)}}),[]),labels&&(allPageRowsLabel=labels.allPageRows||allPageRowsLabel,allRowsLabel=labels.allRows||allRowsLabel);var _getProps=("pageRows"===selectAllMode?getToggleAllPageRowsSelectedProps:getToggleAllRowsSelectedProps)(),onChange=_getProps.onChange,selectProps=_objectWithoutProperties(_getProps,_excluded),disabled=isFetching||selectProps.disabled,isFirstColumnStickyLeft="left"===(null===(_columns$=columns[0])||void 0===_columns$?void 0:_columns$.sticky)&&withStickyColumn;return(0,jsx_runtime.jsxs)("th",{scope:"col",className:classnames_default()("".concat(blockClass,"__select-all-toggle-on"),_defineProperty({},"".concat(blockClass,"__select-all-sticky-left"),isFirstColumnStickyLeft&&windowSize>671)),children:[(0,jsx_runtime.jsx)("span",{children:(0,jsx_runtime.jsx)(es.XZJ,_objectSpread(_objectSpread({},selectProps),{},{name:"".concat(tableId,"-select-all-checkbox-name"),onClick:function onClick(e){onChange(e)},disabled,id:"".concat(tableId,"-select-all-checkbox-id"),labelText:allRowsLabel,hideLabel:!0}))}),(0,jsx_runtime.jsxs)(es.PQB,{renderIcon:function renderIcon(props){return(0,jsx_runtime.jsx)(bucket_1.pO,_objectSpread({size:16},props))},size:"sm","aria-label":allRowsLabel,menuOptionsClass:"".concat(blockClass,"__select-all-toggle-overflow"),children:[(0,jsx_runtime.jsx)(es.laM,{itemText:allPageRowsLabel,requireTitle:!0,disabled,onClick:function onClick(){setSelectAllMode("pageRows"),getToggleAllRowsSelectedProps().onChange({target:{checked:!1}}),getToggleAllPageRowsSelectedProps().onChange({target:{checked:!0}})}}),(0,jsx_runtime.jsx)(es.laM,{itemText:allRowsLabel,requireTitle:!0,disabled,onClick:function onClick(){setSelectAllMode("allRows"),getToggleAllRowsSelectedProps().onChange({target:{checked:!0}})}})]})]})};SelectAllWithToggle.displayName="SelectAllWithToggle",SelectAllWithToggle.propTypes={allPageRowsLabel:prop_types_default().string,allRowsLabel:prop_types_default().string,columns:prop_types_default().arrayOf(prop_types_default().object),getToggleAllPageRowsSelectedProps:prop_types_default().func.isRequired,getToggleAllRowsSelectedProps:prop_types_default().func.isRequired,isAllRowsSelected:prop_types_default().bool.isRequired,isFetching:prop_types_default().bool,selectAllToggle:prop_types_default().object,tableId:prop_types_default().string.isRequired,withStickyColumn:prop_types_default().bool};const DatagridSelectAllWithToggle=SelectAllWithToggle;SelectAllWithToggle.__docgenInfo={description:"",methods:[],displayName:"SelectAllWithToggle",props:{allPageRowsLabel:{defaultValue:{value:"'Select all on page'",computed:!1},description:"",type:{name:"string"},required:!1},allRowsLabel:{defaultValue:{value:"'Select all'",computed:!1},description:"",type:{name:"string"},required:!1},columns:{description:"",type:{name:"arrayOf",value:{name:"object"}},required:!1},getToggleAllPageRowsSelectedProps:{description:"",type:{name:"func"},required:!0},getToggleAllRowsSelectedProps:{description:"",type:{name:"func"},required:!0},isAllRowsSelected:{description:"",type:{name:"bool"},required:!0},isFetching:{description:"",type:{name:"bool"},required:!1},selectAllToggle:{description:"",type:{name:"object"},required:!1},tableId:{description:"",type:{name:"string"},required:!0},withStickyColumn:{description:"",type:{name:"bool"},required:!1}}};var useIsomorphicEffect="undefined"!=typeof window?react.useLayoutEffect:react.useEffect;function useSelectAllToggle_typeof(o){return useSelectAllToggle_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},useSelectAllToggle_typeof(o)}function useSelectAllToggle_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function useSelectAllToggle_defineProperty(obj,key,value){return(key=function useSelectAllToggle_toPropertyKey(arg){var key=function useSelectAllToggle_toPrimitive(input,hint){if("object"!==useSelectAllToggle_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==useSelectAllToggle_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===useSelectAllToggle_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function useSelectAllToggle_slicedToArray(arr,i){return function useSelectAllToggle_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function useSelectAllToggle_iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function useSelectAllToggle_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return useSelectAllToggle_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return useSelectAllToggle_arrayLikeToArray(o,minLen)}(arr,i)||function useSelectAllToggle_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function useSelectAllToggle_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var useSelectAllToggle_blockClass="".concat(settings.K.prefix,"--datagrid__select-all"),useSelectAllWithToggleComponent=function useSelectAllWithToggleComponent(hooks){hooks.useInstance.push((function useInstance(instance){var headers=instance.headers,DatagridPagination=instance.DatagridPagination,headersWithSelectAllToggle=headers.map((function(header){return header.id===common_column_ids.p&&DatagridPagination&&Object.assign(header,{Header}),header}));Object.assign(instance,{headers:headersWithSelectAllToggle})}))},useAddClassNameToSelectRow=function useAddClassNameToSelectRow(hooks){var _useState2=useSelectAllToggle_slicedToArray((0,react.useState)(0),2),windowSize=_useState2[0],setWindowSize=_useState2[1];useIsomorphicEffect((function(){function updateSize(){setWindowSize(window.innerWidth)}return setWindowSize(window.innerWidth),window.addEventListener("resize",updateSize),function(){return window.removeEventListener("resize",updateSize)}}),[]),hooks.getCellProps.push((function(props,data){var _columns$,column=data.cell.column,_data$instance=data.instance,DatagridPagination=_data$instance.DatagridPagination,columns=_data$instance.columns,withStickyColumn=_data$instance.withStickyColumn,isFirstColumnStickyLeft="left"===(null===(_columns$=columns[0])||void 0===_columns$?void 0:_columns$.sticky)&&withStickyColumn;return column.id===common_column_ids.p&&DatagridPagination?[props,{className:classnames_default()("".concat(useSelectAllToggle_blockClass,"-toggle-on"),useSelectAllToggle_defineProperty({},"".concat(useSelectAllToggle_blockClass,"-sticky-left"),isFirstColumnStickyLeft&&windowSize>671))}]:[props]}))},Header=function Header(gridState){var props={tableId:gridState.tableId,isFetching:gridState.isFetching,selectAllToggle:gridState.selectAllToggle,getToggleAllPageRowsSelectedProps:gridState.getToggleAllPageRowsSelectedProps,getToggleAllRowsSelectedProps:gridState.getToggleAllRowsSelectedProps,isAllRowsSelected:gridState.isAllRowsSelected,withStickyColumn:gridState.withStickyColumn,columns:gridState.columns};return(0,jsx_runtime.jsx)(DatagridSelectAllWithToggle,function useSelectAllToggle_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?useSelectAllToggle_ownKeys(Object(t),!0).forEach((function(r){useSelectAllToggle_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):useSelectAllToggle_ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}({},props))};Header.displayName="Header";const Datagrid_useSelectAllToggle=function useSelectAllToggle(hooks){useSelectAllWithToggleComponent(hooks),useAddClassNameToSelectRow(hooks)};var _storybook_styles=__webpack_require__("../ibm-products/src/components/Datagrid/_storybook-styles.scss"),DatagridActions=__webpack_require__("../ibm-products/src/components/Datagrid/utils/DatagridActions.js"),DatagridPagination=__webpack_require__("../ibm-products/src/components/Datagrid/utils/DatagridPagination.js"),Wrapper=function Wrapper(_ref){var children=_ref.children;return(0,jsx_runtime.jsx)("div",{style:{height:"100vh",width:"100%",padding:"1rem",margin:"0",zIndex:"0"},children})};Wrapper.displayName="Wrapper",Wrapper.__docgenInfo={description:"",methods:[],displayName:"Wrapper"};var StoryDocsPage=__webpack_require__("../ibm-products/src/global/js/utils/StoryDocsPage.js");const datagrid_actions_example_namespaceObject=__webpack_require__.p+"static/media/datagrid-actions-example.0988a877.png";var _img,DocsPage=function DocsPage(){return(0,jsx_runtime.jsx)(StoryDocsPage.r,{blocks:[{title:"Getting started",description:"You can use the `Datagrid` component to create various kinds of Carbon data tables. Simply import the `Datagrid` along with any accompanying hooks (listed below) depending on what extensions you'd like to be included.",source:{code:"import {\n  Datagrid,\n  useDatagrid,\n  useInfiniteScroll,\n  useNestedRows,\n  useSelectRows,\n  useExpandedRow,\n  useOnRowClick,\n  useSortableColumns,\n  useRowIsMouseOver,\n  useColumnRightAlign,\n  useDisableSelectRows,\n  useStickyColumn,\n  useActionsColumn,\n  useCustomizeColumns,\n  useSelectAllWithToggle,\n  useColumnCenterAlign,\n  useColumnOrder,\n  useEditableCell,\n  useFiltering,\n  useFilterContext\n} from '@carbon/ibm-products';"}},{title:"Basic",description:"Here is a basic usage example. The following component will render the datagrid seen below, with pagination and some toolbar actions. One of the key pieces to building the `Datagrid` is the `useDatagrid` hook, this will give you all of the state/props required to render a `Datagrid`."},{subTitle:"Multi line wrap",description:"This setting enables the table cell text wrap to two lines. This can be turned on for only one column in the datagrid or for every column.",source:{language:"jsx",code:"\n          import { Datagrid, useDatagrid } from '@carbon/ibm-products';\n\nconst App = () => {\n  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid\n  const [data] = useState(makeData(10)); // This is the data that will be rendered by the datagrid\n\n  const columns = React.useMemo(\n    () => [\n      ...defaultHeader,\n      {\n        Header: 'Someone 11',\n        accessor: 'someone11',\n        multiLineWrap: true, //If `multiLineWrap` is required only for specific columns\n      },\n    ],\n    []\n  );\n\n  const datagridState = useDatagrid({\n    columns,\n    data,\n    multiLineWrapAll: true, // If `multiLineWrap` is required for all columns in data grid\n  });\n\n  return <Datagrid datagridState={datagridState} />;\n};\n          "}},{story:BasicUsage},{title:"Column structure",description:"The columns that are passed to the `useDatagrid` hook will have the following structure:",source:{language:"jsx",code:"\n          const columns = [\n    {\n      Header: 'First Name',\n      accessor: 'firstName',\n    },\n    {\n      Header: 'Last Name',\n      accessor: 'lastName',\n    },\n];"}},{description:"To change the default/initial width of a column, add a `width` property to the column.",source:{language:"jsx",code:"\n          const columns = [\n  {\n    Header: 'First Name',\n    accessor: 'firstName',\n    width: 120,\n  },\n  {\n    Header: 'Last Name',\n    accessor: 'lastName',\n    width: 180,\n  },\n];\n          "}},{description:"If needed, it is also possible to wrap each cell in a containing element. See below:",source:{language:"jsx",code:"\n          const columns = [\n  {\n    Header: 'First Name',\n    accessor: 'firstName',\n  },\n  {\n    Header: 'Last Name',\n    accessor: 'lastName',\n    Cell: ({ cell: { value } }) => (\n      <span className=\"custom-cell-wrapper\">{value}</span>\n    ),\n  },\n];\n          "}},{description:"There is also an optional resize callback when resizing columns, allowing you to save the widths of columns that have been resized. The resize callback returns the column that was just resized and it's width, in addition to all of the columns that have been resized and their widths.",source:{language:"jsx",code:"\nuseDatagrid({\n  columns,\n  data,\n  onColResizeEnd: (currentColumn, allColumns) =>\n      console.log(currentColumn, allColumns),\n  resizerAriaLabel: 'Resize column',\n});\n          "}},{description:"Disabling the resizable columns is possible by specifying `disableResizing: true` within the `useDatagrid` hook. To pass in your own translated label for the column resizer, add the `resizerAriaLabel` property",source:{language:"jsx",code:"\nuseDatagrid({\n  columns,\n  data,\n  disableResizing: true,\n});\n          "}},{title:"Rendering the table toolbar",image:_img||(_img=(0,jsx_runtime.jsx)("img",{src:datagrid_actions_example_namespaceObject,alt:"Datagrid highlighting toolbar area"})),description:"In some of the examples you will see a component named `DatagridActions` passed to the `useDatagrid` hook. This component will render the table toolbar and is something that you will need to create on your own and then provide it to the `useDatagrid` hook. You can reference the `DatagridActions` that we have [created for our stories](https://github.com/carbon-design-system/ibm-products/blob/main/packages/ibm-products/src/components/Datagrid/utils/DatagridActions.js) when building your own."},{title:"Empty",story:EmptyState,description:"The `Datagrid` supports empty states, when the data prop passed to the `useDatagrid` hook is an empty array.\n        ",source:{language:"jsx",code:"\nimport { Datagrid, useDatagrid } from '@carbon/ibm-products';\n\nconst App = () => {\n  const columns = React.useMemo(() => defaultHeader, []); // These are the columns that will be used by the datagrid\n  const [data] = useState([]); // This is the data that will be rendered by the datagrid\n\n  const datagridState = useDatagrid({\n    columns,\n    data,\n    emptyStateTitle: 'Empty state title',\n    emptyStateDescription: 'Description explaining why table is empty',\n    emptyStateSize: 'lg', // See empty state size options from the EmptyState component\n  });\n\n  return <Datagrid datagridState={datagridState} />;\n};\n          "}},{title:"Auto size column to fit content",description:"The `getAutoSizedColumnWidth` utility function can be used to auto size columns based on it's content. The width will be set to that of the largest cell in the column or the column header, whichever is greater. If this is not used, the width will be set to the default column width (150px) or the value passed to the `width` property in the column definition. See example below:",source:{code:"\nimport { Datagrid, useDatagrid, getAutoSizedColumnWidth } from '@carbon/ibm-products';\n\n...\n\nconst myColumns = [\n  {\n    Header: 'Column 1',\n    accessor: 'column_1',\n    width: getAutoSizedColumnWidth(rows, 'column_1', 'Column 1'),\n  }\n]\n\n...\n          "}},{title:"Disabling select rows",description:"\n        Disabling select rows allows you to choose which rows will be disabled in the table.\n\n- Include the `useDisableSelectRows` hook in the `endPlugins` property of `useDatagrid`.\n- Add the `shouldDisableSelectRow` to the `useDatagrid` hook, this will be a function that returns the row indexes that will be disabled.\n        ",source:{code:"\nconst [data] = useState(makeData(10));\nconst columns = React.useMemo(() => getColumns(data), []);\nconst datagridState = useDatagrid(\n  {\n    columns,\n    data,\n    DatagridActions,\n    DatagridBatchActions,\n    endPlugins: [useDisableSelectRows],\n    shouldDisableSelectRow: (row) => row.id % 2 === 0,\n    disableSelectAll: true,\n  },\n  useSelectRows\n);\n\nreturn <Datagrid datagridState={datagridState} />;\n          "}},{title:"Infinite scroll",description:"Infinite scroll is supported via the `useInfiniteScroll` hook. This hook will allow you to fetch more data to display to the user after a certain scroll threshold. The `useInfiniteScroll` hook can also be used to support virtualized data, this is required when working with large amounts of data, only rendering the rows that need to be visible in the component at a point in time."},{description:"Infinite scroll:\n- Include `useInfiniteScroll` hook\n- Add `fetchMoreData` property to `useDatagrid`, this will be a function that is called when the scroll threshold is met. Optionally change the height of the grid with the `virtualHeight` property.",source:{code:"\nconst datagridState = useDatagrid(\n  {\n    columns,\n    data,\n    isFetching,\n    fetchMoreData: fetchData,\n    virtualHeight: 540,\n    loadMoreThreshold: 200,\n    emptyStateTitle: 'Empty state title',\n    emptyStateDescription: 'Description explaining why the table is empty',\n  },\n  useInfiniteScroll\n);"}},{description:"Virtualized data:\n- Include `useInfiniteScroll` hook\n- The Datagrid will know to use virtualized data just by providing the `useInfiniteScroll` hook\n        ",source:{code:"\nconst [data] = useState(makeData(10000));\nconst columns = React.useMemo(() => getColumns(data), []);\nconst datagridState = useDatagrid(\n  {\n    columns,\n    data,\n  },\n  useInfiniteScroll\n);\n          "}},{title:"Detect row hover",description:"There may be cases when you want to detect if a user is hovering on a particular row. In this case, use the `useRowIsMouseOver` hook.\n- Include the `useRowIsMouseOver` hook\n- When hover is detected on a row, a property called `isMouseOver` is changed from `false` to `true` within that row.\n        "},{title:"Select items across all pages",description:"By default, selecting all items with paginated rows will result in just the current page rows being selected. Incorporating the `useSelectAllWithToggle` hook will provide the option to select all rows across all pages.\n- Include `useSelectAllWithToggle` and `useSelectRows` hook\n- Add the `selectAllToggle` property to the `useDatagrid` hook\n- Optionally pass in labels to ensure proper translation\n- Optionally pass in `onSelectAllRoss`, function that will be called via the select all rows checkbox `onChange`\n        ",source:{code:"\nconst [data] = useState(makeData(100));\nconst columns = React.useMemo(() => getColumns(data), []);\nconst [areAllSelected, setAreAllSelected] = useState(false);\nconst datagridState = useDatagrid(\n  {\n    columns,\n    data,\n    initialState: {\n      pageSize: 10,\n      pageSizes: [5, 10, 25, 50],\n    },\n    selectAllToggle: {\n      labels: {\n        allRows: 'Select all',\n        allPageRows: 'Select all on page',\n      },\n      onSelectAllRows: setAreAllSelected,\n    },\n    DatagridPagination,\n    DatagridActions,\n    DatagridBatchActions,\n  },\n  useSelectRows,\n  useSelectAllWithToggle\n);\n\nreturn (\n  <Datagrid datagridState={datagridState} />\n);\n          "}},{title:"Selecting rows",description:"When building a Datagrid that requires selectable rows, use the `useSelectRows` hook.\n- Include `useSelectRows` hook\n- Add `onRowSelect` to the `useDatagrid` hook, this is a callback function called when on a row's selection checkbox onChange, and sends back the row object and the event\n- Add `onAllRowSelect` to the `useDatagrid` hook, this is a callback function called when on all rows selection checkbox onChange, and sends back all rows object and the event\n        ",source:{code:"\nconst [data] = useState(makeData(10));\nconst columns = React.useMemo(() => getColumns(data), []);\nconst datagridState = useDatagrid(\n  {\n    columns,\n    data,\n    onRowSelect: (row, event) => console.log(row, event),\n    onAllRowSelect: (rows, event) => console.log(rows, event),\n    batchActionMenuButtonLabel: 'More',\n  },\n  useSelectRows\n);\n\nreturn <Datagrid datagridState={datagridState} />;\n          "}},{description:"The select all checkbox can be optionally hidden by settings the `hideSelectAll` property to `true` in the `useDatagrid` hook.",source:{code:"\nconst datagridState = useDatagrid(\n  {\n    columns,\n    data,\n    onRowSelect: (row, event) => console.log(row, event),\n    hideSelectAll: true,\n  },\n  useSelectRows\n);\n          "}},{description:"Datagrid also provides the option to use radio selection in cases where only one row should be selected at a time. Additionally, you can have preselected row/rows, see example below.",source:{code:"\nconst [data] = useState(makeData(10));\nconst columns = React.useMemo(() => getColumns(data), []);\nconst datagridState = useDatagrid(\n  {\n    columns,\n    data,\n    radio: true,\n    onRadioSelect: (row) => console.log(`Row clicked`),\n    initialState: {\n      selectedRowIds: {\n        3: true,\n      },\n    },\n  },\n  useSelectRows\n);\n\nreturn <Datagrid datagridState={datagridState} />;\n          "}},{description:"Batch actions can be included by providing `batchActions: true` and `toolbarBatchActions: CarbonButtonProps[]` to the `useDatagrid` hook. While passing in a `DatagridBatchActions` component will also work, it does not have the same responsive behavior built-in, thus we recommend using the `batchActions` and `toolbarBatchActions` properties when possible.",source:{code:"\nexport const SelectableRowWithBatchActions = () => {\n  const [data] = useState(makeData(10));\n  const columns = React.useMemo(() => getColumns(data), []);\n  const datagridState = useDatagrid(\n    {\n      columns,\n      data,\n      DatagridActions,\n      batchActions: true,\n      toolbarBatchActions: getBatchActions(),\n      onRowSelect: (row, event) => console.log(row, event),\n    },\n    useSelectRows\n  );\n\n  return <Datagrid datagridState={datagridState} />;\n};\n"}},{title:"Sortable columns",description:"To add sortable columns to your Datagrid, simply add the `useSortableColumns` hook. This will allow each column header to be clickable and sort each column in either ascending or descending order.\n- Include `useSortableColumns` hook\n        ",source:{code:"\nconst [data] = useState(makeData(10));\nconst columns = React.useMemo(() => getColumns(data), []);\nconst datagridState = useDatagrid(\n  {\n    columns,\n    data,\n    ascendingSortableLabelText: 'none',\n    descendingSortableLabelText: 'ascending',\n    defaultSortableLabelText: 'descending',\n  },\n  useSortableColumns\n);\n\nreturn <Datagrid datagridState={datagridState} />;\n          "}},{description:"Columns can also be initially sorted by providing a `sortableColumn` object to the `initialState`. The structure of\n        the `sortableColumn` property is as follows:\n`\n{\n  id: string, // column id\n  order: string, // ASC | DESC\n}\n`\n\nSee example below: ",source:{code:"\nconst [data] = useState(makeData(10));\nconst columns = React.useMemo(() => getColumns(data), []);\nconst datagridState = useDatagrid(\n  {\n    columns,\n    data,\n    ascendingSortableLabelText: 'none',\n    descendingSortableLabelText: 'ascending',\n    defaultSortableLabelText: 'descending',\n    initialState: {\n      sortableColumn: {\n        id: 'firstName', // column id\n        order: 'ASC' // sorting order\n      }\n    }\n  },\n  useSortableColumns\n);\n\nreturn <Datagrid datagridState={datagridState} />;\n          "}},{title:"Sticky column",description:"Sticky columns can be useful when you have many columns that create a horizontal scroll and you have important data in the first or last column that you always want to be visible.\n- Include the `useStickyColumn` hook\n- Sticky columns can _only_ be applied to the first and the last columns in the Datagrid. To have the first column stick, add `sticky: 'left'` to the first column definition. To have the last column stick, add `sticky: 'right'` to the last column definition.\n        ",source:{code:"\nconst columns = [\n  {\n    Header: 'First column',\n    accessor: 'first_column',\n    sticky: 'left',\n  },\n  {\n    ...\n  },\n  {\n    ...\n  }\n];\nconst datagridState = useDatagrid(\n  {\n    columns,\n    data,\n  },\n  useStickyColumn\n);\n\nreturn <Datagrid datagridState={datagridState} />;\n          "}}]})};DocsPage.displayName="DocsPage";const Datagrid_docs_page=DocsPage;DocsPage.__docgenInfo={description:"",methods:[],displayName:"DocsPage"};var _p;function Datagrid_stories_typeof(o){return Datagrid_stories_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},Datagrid_stories_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function Datagrid_stories_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function Datagrid_stories_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?Datagrid_stories_ownKeys(Object(t),!0).forEach((function(r){Datagrid_stories_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Datagrid_stories_ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function Datagrid_stories_defineProperty(obj,key,value){return(key=function Datagrid_stories_toPropertyKey(t){var i=function Datagrid_stories_toPrimitive(t,r){if("object"!=Datagrid_stories_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=Datagrid_stories_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==Datagrid_stories_typeof(i)?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function Datagrid_stories_toConsumableArray(arr){return function Datagrid_stories_arrayWithoutHoles(arr){if(Array.isArray(arr))return Datagrid_stories_arrayLikeToArray(arr)}(arr)||function Datagrid_stories_iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||Datagrid_stories_unsupportedIterableToArray(arr)||function Datagrid_stories_nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Datagrid_stories_slicedToArray(arr,i){return function Datagrid_stories_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function Datagrid_stories_iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||Datagrid_stories_unsupportedIterableToArray(arr,i)||function Datagrid_stories_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Datagrid_stories_unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return Datagrid_stories_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Datagrid_stories_arrayLikeToArray(o,minLen):void 0}}function Datagrid_stories_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}const Datagrid_stories={title:"IBM Products/Components/Datagrid",component:Datagrid.c,tags:["autodocs"],parameters:{storySource:{source:"function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _p;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * Copyright IBM Corp. 2022, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { makeData } from './utils/makeData';\nimport { action } from '@storybook/addon-actions';\nimport { Activity, Add } from '@carbon/react/icons';\nimport { TableBatchAction, TableBatchActions } from '@carbon/react';\nimport { Edit, TrashCan } from '@carbon/react/icons';\nimport { Datagrid, useDatagrid, useInfiniteScroll, useSelectRows, useSortableColumns, useDisableSelectRows, useSelectAllWithToggle, useStickyColumn, useActionsColumn, getAutoSizedColumnWidth } from '.';\n\n// import mdx from './Datagrid.mdx';\n\nimport styles from './_storybook-styles.scss';\nimport { DatagridActions } from './utils/DatagridActions';\nimport { DatagridPagination } from './utils/DatagridPagination';\nimport { Wrapper } from './utils/Wrapper';\nimport DocsPage from './Datagrid.docs-page';\nexport default {\n  title: 'IBM Products/Components/Datagrid',\n  component: Datagrid,\n  tags: ['autodocs'],\n  parameters: {\n    styles: styles,\n    docs: {\n      page: DocsPage\n    },\n    layout: 'fullscreen'\n  },\n  argTypes: {\n    featureFlags: {\n      table: {\n        disable: true\n      }\n    }\n  },\n  excludeStories: ['getBatchActions']\n};\nvar getColumns = function getColumns(rows) {\n  return [{\n    Header: 'Row Index',\n    accessor: function accessor(row, i) {\n      return i;\n    },\n    sticky: 'left',\n    id: 'rowIndex',\n    // id is required when accessor is a function.\n    width: getAutoSizedColumnWidth(rows, 'rowIndex', 'Row Index'),\n    className: 'test-column'\n  }, {\n    Header: 'First Name',\n    accessor: 'firstName'\n  }, {\n    Header: 'Last Name',\n    accessor: 'lastName',\n    width: getAutoSizedColumnWidth(rows, 'lastName', 'Last name')\n  }, {\n    Header: 'Age',\n    accessor: 'age',\n    width: getAutoSizedColumnWidth(rows, 'age', 'Age')\n  }, {\n    Header: 'Visits',\n    accessor: 'visits',\n    width: getAutoSizedColumnWidth(rows, 'visits', 'Visits')\n  }, {\n    Header: 'Status',\n    accessor: 'status',\n    width: getAutoSizedColumnWidth(rows, 'status', 'Status')\n  }, {\n    Header: 'Joined',\n    accessor: 'joined',\n    Cell: function Cell(_ref) {\n      var value = _ref.cell.value;\n      return /*#__PURE__*/React.createElement(\"span\", null, value.toLocaleDateString());\n    }\n  }, {\n    Header: 'Someone 1',\n    accessor: 'someone1'\n  }, {\n    Header: 'Someone 2',\n    accessor: 'someone2'\n  }, {\n    Header: 'Someone 3',\n    accessor: 'someone3'\n  }, {\n    Header: 'Someone 4',\n    accessor: 'someone4'\n  }, {\n    Header: 'Someone 5',\n    accessor: 'someone5'\n  }, {\n    Header: 'Someone 6',\n    accessor: 'someone6'\n  }, {\n    Header: 'Someone 7',\n    accessor: 'someone7'\n  }];\n};\nexport var BasicUsage = function BasicUsage() {\n  var _useState = useState(makeData(10)),\n    _useState2 = _slicedToArray(_useState, 1),\n    data = _useState2[0];\n  var columns = React.useMemo(function () {\n    return [].concat(_toConsumableArray(getColumns(data)), [{\n      Header: 'Someone 11',\n      accessor: 'someone11',\n      multiLineWrap: true //If `multiLineWrap` is required only for specific columns\n    }]);\n  }, []);\n  var rows = React.useMemo(function () {\n    return data;\n  }, [data]);\n  var datagridState = useDatagrid({\n    columns: columns,\n    data: rows,\n    onColResizeEnd: function onColResizeEnd(currentColumn, allColumns) {\n      return console.log(currentColumn, allColumns);\n    }\n  });\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: datagridState,\n    title: \"Basic usage\"\n  });\n};\nexport var EmptyState = function EmptyState() {\n  var _useState3 = useState(makeData(0)),\n    _useState4 = _slicedToArray(_useState3, 1),\n    data = _useState4[0];\n  var columns = React.useMemo(function () {\n    return getColumns(data);\n  }, []);\n  var emptyStateTitle = 'Empty state title';\n  var emptyStateDescription = 'Description explaining why the table is empty';\n  var emptyStateSize = 'lg';\n  var illustrationTheme = 'light';\n  var emptyStateAction = {\n    text: 'Create new',\n    onClick: action('Clicked empty state action button'),\n    renderIcon: Add,\n    iconDescription: 'Add icon'\n  };\n  var emptyStateLink = {\n    text: 'View documentation',\n    href: 'https://www.carbondesignsystem.com'\n  };\n  var datagridState = useDatagrid({\n    columns: columns,\n    data: data,\n    illustrationTheme: illustrationTheme,\n    DatagridActions: DatagridActions,\n    DatagridBatchActions: DatagridBatchActions,\n    DatagridPagination: DatagridPagination,\n    emptyStateDescription: emptyStateDescription,\n    emptyStateTitle: emptyStateTitle,\n    emptyStateSize: emptyStateSize,\n    emptyStateAction: emptyStateAction,\n    emptyStateLink: emptyStateLink\n  });\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: _objectSpread({}, datagridState)\n  });\n};\nexport var InitialLoad = function InitialLoad() {\n  var _useState5 = useState(makeData(0)),\n    _useState6 = _slicedToArray(_useState5, 2),\n    data = _useState6[0],\n    setData = _useState6[1];\n  var columns = React.useMemo(function () {\n    return getColumns(data);\n  }, []);\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isFetching = _useState8[0],\n    setIsFetching = _useState8[1];\n  var fetchData = function fetchData() {\n    return new Promise(function (resolve) {\n      setIsFetching(true);\n      setTimeout(function () {\n        setData(data.concat(makeData(30, 5, 2)));\n        resolve();\n      }, 1000);\n    }).then(function () {\n      return setIsFetching(false);\n    });\n  };\n  useEffect(function () {\n    fetchData();\n  }, []);\n  var emptyStateTitle = 'Empty state title';\n  var emptyStateDescription = 'Description explaining why the table is empty';\n  var datagridState = useDatagrid({\n    columns: columns,\n    data: data,\n    isFetching: isFetching,\n    emptyStateTitle: emptyStateTitle,\n    emptyStateDescription: emptyStateDescription\n  });\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: _objectSpread({}, datagridState)\n  });\n};\nexport var InfiniteScroll = function InfiniteScroll() {\n  var _useState9 = useState(makeData(0)),\n    _useState10 = _slicedToArray(_useState9, 2),\n    data = _useState10[0],\n    setData = _useState10[1];\n  var columns = React.useMemo(function () {\n    return getColumns(data);\n  }, []);\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isFetching = _useState12[0],\n    setIsFetching = _useState12[1];\n  var fetchData = function fetchData() {\n    return new Promise(function (resolve) {\n      setIsFetching(true);\n      setTimeout(function () {\n        setData(data.concat(makeData(30, 5, 2)));\n        setIsFetching(false);\n        resolve();\n      }, 1000);\n    });\n  };\n  useEffect(function () {\n    fetchData();\n  }, []);\n  var datagridState = useDatagrid({\n    columns: columns,\n    data: data,\n    isFetching: isFetching,\n    fetchMoreData: fetchData,\n    virtualHeight: 540,\n    emptyStateTitle: 'Empty state title',\n    emptyStateDescription: 'Description explaining why the table is empty'\n  }, useInfiniteScroll);\n  return /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: _objectSpread({}, datagridState)\n  }));\n};\nexport var WithVirtualizedData = function WithVirtualizedData() {\n  var _useState13 = useState(makeData(10000)),\n    _useState14 = _slicedToArray(_useState13, 1),\n    data = _useState14[0];\n  var columns = React.useMemo(function () {\n    return getColumns(data);\n  }, []);\n  var datagridState = useDatagrid({\n    columns: columns,\n    data: data\n  }, useInfiniteScroll);\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: _objectSpread({}, datagridState)\n  });\n};\nexport var Pagination = function Pagination() {\n  var _useState15 = useState(makeData(100)),\n    _useState16 = _slicedToArray(_useState15, 1),\n    data = _useState16[0];\n  var columns = React.useMemo(function () {\n    return getColumns(data);\n  }, []);\n  var datagridState = useDatagrid({\n    columns: columns,\n    data: data,\n    initialState: {\n      pageSize: 25,\n      pageSizes: [5, 10, 25, 50]\n    },\n    DatagridPagination: DatagridPagination\n  });\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: _objectSpread({}, datagridState)\n  });\n};\nexport var SelectableRow = function SelectableRow() {\n  var _useState17 = useState(makeData(10)),\n    _useState18 = _slicedToArray(_useState17, 1),\n    data = _useState18[0];\n  var columns = React.useMemo(function () {\n    return getColumns(data);\n  }, []);\n  var emptyStateTitle = 'Empty state title';\n  var emptyStateDescription = 'Description explaining why the table is empty';\n  var datagridState = useDatagrid({\n    columns: columns,\n    data: data,\n    DatagridActions: DatagridActions,\n    batchActions: true,\n    toolbarBatchActions: getBatchActions(),\n    emptyStateTitle: emptyStateTitle,\n    emptyStateDescription: emptyStateDescription,\n    onRowSelect: function onRowSelect(row, event) {\n      return console.log(row, event);\n    },\n    endPlugins: [useDisableSelectRows],\n    shouldDisableSelectRow: function shouldDisableSelectRow(row) {\n      return row.id === '0';\n    }\n  }, useSelectRows, useStickyColumn);\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: _objectSpread({}, datagridState)\n  });\n};\nexport var RadioSelect = function RadioSelect() {\n  var _useState19 = useState(makeData(10)),\n    _useState20 = _slicedToArray(_useState19, 1),\n    data = _useState20[0];\n  var columns = React.useMemo(function () {\n    return getColumns(data);\n  }, []);\n  var datagridState = useDatagrid({\n    columns: columns,\n    data: data,\n    hideSelectAll: true,\n    radio: true,\n    onRadioSelect: function onRadioSelect(row) {\n      return console.log(\"Row clicked: \".concat(row.id));\n    },\n    initialState: {\n      selectedRowIds: {\n        3: true\n      }\n    }\n  }, useSelectRows, useStickyColumn);\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: _objectSpread({}, datagridState)\n  });\n};\nexport var HideSelectAll = function HideSelectAll() {\n  var _useState21 = useState(makeData(10)),\n    _useState22 = _slicedToArray(_useState21, 1),\n    data = _useState22[0];\n  var columns = React.useMemo(function () {\n    return getColumns(data);\n  }, []);\n  var datagridState = useDatagrid({\n    columns: columns,\n    data: data,\n    hideSelectAll: true\n  }, useSelectRows);\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: _objectSpread({}, datagridState)\n  });\n};\nexport var SortableColumns = function SortableColumns() {\n  var _useState23 = useState(makeData(10)),\n    _useState24 = _slicedToArray(_useState23, 1),\n    data = _useState24[0];\n  var columns = React.useMemo(function () {\n    return getColumns(data);\n  }, []);\n  var datagridState = useDatagrid({\n    columns: columns,\n    data: data,\n    ascendingSortableLabelText: 'ascending',\n    descendingSortableLabelText: 'descending',\n    defaultSortableLabelText: 'none',\n    initialState: {\n      sortableColumn: {\n        id: 'firstName',\n        order: 'ASC'\n      }\n    }\n  }, useSortableColumns);\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: datagridState\n  });\n};\nexport var ActionsDropdown = function ActionsDropdown() {\n  var _useState25 = useState(makeData(10)),\n    _useState26 = _slicedToArray(_useState25, 1),\n    data = _useState26[0];\n  var columns = React.useMemo(function () {\n    return getColumns(data);\n  }, []);\n  var datagridState = useDatagrid({\n    columns: columns,\n    data: data,\n    DatagridActions: DatagridActions,\n    DatagridBatchActions: DatagridBatchActions,\n    rowSizeProps: {\n      labels: {\n        rowSizeLabels: {\n          xl: 'Extra large',\n          lg: 'Large (default)',\n          md: 'Medium',\n          sm: 'Small',\n          xs: 'Extra small'\n        },\n        legendText: 'Row settings'\n      }\n    }\n  }, useSelectRows);\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: _objectSpread({}, datagridState)\n  });\n};\nvar DatagridBatchActions = function DatagridBatchActions(datagridState) {\n  var selectedFlatRows = datagridState.selectedFlatRows,\n    toggleAllRowsSelected = datagridState.toggleAllRowsSelected;\n  var totalSelected = selectedFlatRows && selectedFlatRows.length;\n  var onBatchAction = function onBatchAction() {\n    return alert('Batch action');\n  };\n  var actionName = 'Action';\n  return /*#__PURE__*/React.createElement(TableBatchActions, {\n    shouldShowBatchActions: totalSelected > 0,\n    totalSelected: totalSelected,\n    onCancel: function onCancel() {\n      return toggleAllRowsSelected(false);\n    }\n  }, /*#__PURE__*/React.createElement(TableBatchAction, {\n    renderIcon: function renderIcon(props) {\n      return /*#__PURE__*/React.createElement(Activity, _extends({\n        size: 16\n      }, props));\n    },\n    onClick: onBatchAction\n  }, actionName));\n};\nexport var getBatchActions = function getBatchActions() {\n  return [{\n    label: 'Duplicate',\n    renderIcon: function renderIcon(props) {\n      return /*#__PURE__*/React.createElement(Add, _extends({\n        size: 16\n      }, props));\n    },\n    onClick: action('Clicked batch action button')\n  }, {\n    label: 'Add',\n    renderIcon: function renderIcon(props) {\n      return /*#__PURE__*/React.createElement(Add, _extends({\n        size: 16\n      }, props));\n    },\n    onClick: action('Clicked batch action button')\n  }, {\n    label: 'Publish to catalog',\n    renderIcon: function renderIcon(props) {\n      return /*#__PURE__*/React.createElement(Add, _extends({\n        size: 16\n      }, props));\n    },\n    onClick: action('Clicked batch action button')\n  }, {\n    label: 'Download',\n    renderIcon: function renderIcon(props) {\n      return /*#__PURE__*/React.createElement(Add, _extends({\n        size: 16\n      }, props));\n    },\n    onClick: action('Clicked batch action button')\n  }, {\n    label: 'Delete',\n    renderIcon: function renderIcon(props) {\n      return /*#__PURE__*/React.createElement(Add, _extends({\n        size: 16\n      }, props));\n    },\n    onClick: action('Clicked batch action button'),\n    hasDivider: true,\n    kind: 'danger'\n  }];\n};\nexport var BatchActions = function BatchActions() {\n  var _useState27 = useState(makeData(10)),\n    _useState28 = _slicedToArray(_useState27, 1),\n    data = _useState28[0];\n  var columns = React.useMemo(function () {\n    return [].concat(_toConsumableArray(getColumns(data)), [{\n      Header: '',\n      accessor: 'actions',\n      sticky: 'right',\n      isAction: true\n    }]);\n  }, []);\n  var getRowActions = function getRowActions() {\n    return [{\n      id: 'edit',\n      itemText: 'Edit',\n      icon: Edit,\n      onClick: action('Clicked row action: edit')\n    }, {\n      id: 'delete',\n      itemText: 'Delete',\n      icon: TrashCan,\n      onClick: action('Clicked row action: delete')\n    }];\n  };\n  var datagridState = useDatagrid({\n    columns: columns,\n    data: data,\n    batchActions: true,\n    toolbarBatchActions: getBatchActions(),\n    DatagridActions: DatagridActions,\n    DatagridBatchActions: DatagridBatchActions,\n    rowActions: getRowActions(),\n    onRowSelect: function onRowSelect(row, event) {\n      return console.log('onRowClick: ', row, event);\n    },\n    onAllRowSelect: function onAllRowSelect(rows, event) {\n      return console.log('onAllRowsClick called', rows, event);\n    },\n    batchActionMenuButtonLabel: 'More'\n  }, useSelectRows, useActionsColumn, useStickyColumn);\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: _objectSpread({}, datagridState),\n    ariaToolbarLabel: \"batch actions toolbar\"\n  });\n};\nexport var DisableSelectRow = function DisableSelectRow() {\n  var _useState29 = useState(makeData(10)),\n    _useState30 = _slicedToArray(_useState29, 1),\n    data = _useState30[0];\n  var columns = React.useMemo(function () {\n    return getColumns(data);\n  }, []);\n  var datagridState = useDatagrid({\n    columns: columns,\n    data: data,\n    DatagridActions: DatagridActions,\n    DatagridBatchActions: DatagridBatchActions,\n    endPlugins: [useDisableSelectRows],\n    shouldDisableSelectRow: function shouldDisableSelectRow(row) {\n      return row.id % 2 === 0;\n    },\n    disableSelectAll: true\n  }, useSelectRows);\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: _objectSpread({}, datagridState)\n  });\n};\nexport var FrozenColumns = function FrozenColumns() {\n  var _useState31 = useState(makeData(10)),\n    _useState32 = _slicedToArray(_useState31, 1),\n    data = _useState32[0];\n  var columns = React.useMemo(function () {\n    return [].concat(_toConsumableArray(getColumns(data)), [{\n      Header: '',\n      accessor: 'actions',\n      sticky: 'right',\n      isAction: true\n    }]);\n  }, []);\n  var _useState33 = useState(''),\n    _useState34 = _slicedToArray(_useState33, 2),\n    msg = _useState34[0],\n    setMsg = _useState34[1];\n  var onActionClick = function onActionClick(actionId, row) {\n    var original = row.original;\n    setMsg(\"Clicked [\".concat(actionId, \"] on row: <\").concat(original.firstName, \" \").concat(original.lastName, \">\"));\n  };\n  var datagridState = useDatagrid({\n    columns: columns,\n    data: data,\n    batchActions: true,\n    toolbarBatchActions: getBatchActions(),\n    DatagridActions: DatagridActions,\n    DatagridBatchActions: DatagridBatchActions,\n    rowActions: [{\n      id: 'edit',\n      itemText: 'Edit',\n      onClick: onActionClick\n    }, {\n      id: 'vote',\n      itemText: 'Vote',\n      onClick: onActionClick,\n      shouldHideMenuItem: function shouldHideMenuItem(row) {\n        return row.original.age <= 18;\n      }\n    }, {\n      id: 'retire',\n      itemText: 'Retire',\n      onClick: onActionClick,\n      disabled: false,\n      shouldDisableMenuItem: function shouldDisableMenuItem(row) {\n        return row.original.age <= 60;\n      }\n    }, {\n      id: 'delete',\n      itemText: 'Delete',\n      hasDivider: true,\n      isDelete: true,\n      onClick: onActionClick\n    }]\n  }, useStickyColumn, useActionsColumn, useSelectRows, useSelectAllWithToggle);\n  return /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: _objectSpread({}, datagridState)\n  }), /*#__PURE__*/React.createElement(\"p\", null, msg), _p || (_p = /*#__PURE__*/React.createElement(\"p\", null, \"More details documentation check the Notes section below\")));\n};\nexport var Skeleton = function Skeleton() {\n  var _useState35 = useState([]),\n    _useState36 = _slicedToArray(_useState35, 1),\n    data = _useState36[0];\n  var columns = React.useMemo(function () {\n    return _toConsumableArray(getColumns(data));\n  }, []);\n  var emptyStateTitle = 'Empty state title';\n  var emptyStateDescription = 'Description explaining why the table is empty';\n  var datagridState = useDatagrid({\n    columns: columns,\n    data: data,\n    isFetching: true,\n    emptyStateDescription: emptyStateDescription,\n    emptyStateTitle: emptyStateTitle\n  });\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: datagridState\n  });\n};",locationsMap:{"basic-usage":{startLoc:{col:24,line:122},endLoc:{col:1,line:147},startBody:{col:24,line:122},endBody:{col:1,line:147}},"empty-state":{startLoc:{col:24,line:148},endLoc:{col:1,line:185},startBody:{col:24,line:148},endBody:{col:1,line:185}},"initial-load":{startLoc:{col:25,line:186},endLoc:{col:1,line:224},startBody:{col:25,line:186},endBody:{col:1,line:224}},"infinite-scroll":{startLoc:{col:28,line:225},endLoc:{col:1,line:262},startBody:{col:28,line:225},endBody:{col:1,line:262}},"with-virtualized-data":{startLoc:{col:33,line:263},endLoc:{col:1,line:277},startBody:{col:33,line:263},endBody:{col:1,line:277}},pagination:{startLoc:{col:24,line:278},endLoc:{col:1,line:297},startBody:{col:24,line:278},endBody:{col:1,line:297}},"selectable-row":{startLoc:{col:27,line:298},endLoc:{col:1,line:326},startBody:{col:27,line:298},endBody:{col:1,line:326}},"radio-select":{startLoc:{col:25,line:327},endLoc:{col:1,line:351},startBody:{col:25,line:327},endBody:{col:1,line:351}},"hide-select-all":{startLoc:{col:27,line:352},endLoc:{col:1,line:367},startBody:{col:27,line:352},endBody:{col:1,line:367}},"sortable-columns":{startLoc:{col:29,line:368},endLoc:{col:1,line:391},startBody:{col:29,line:368},endBody:{col:1,line:391}},"actions-dropdown":{startLoc:{col:29,line:392},endLoc:{col:1,line:420},startBody:{col:29,line:392},endBody:{col:1,line:420}},"get-batch-actions":{startLoc:{col:29,line:444},endLoc:{col:1,line:488},startBody:{col:29,line:444},endBody:{col:1,line:488}},"batch-actions":{startLoc:{col:26,line:489},endLoc:{col:1,line:534},startBody:{col:26,line:489},endBody:{col:1,line:534}},"disable-select-row":{startLoc:{col:30,line:535},endLoc:{col:1,line:556},startBody:{col:30,line:535},endBody:{col:1,line:556}},"frozen-columns":{startLoc:{col:27,line:557},endLoc:{col:1,line:614},startBody:{col:27,line:557},endBody:{col:1,line:614}},skeleton:{startLoc:{col:22,line:615},endLoc:{col:1,line:634},startBody:{col:22,line:615},endBody:{col:1,line:634}}}},styles:_storybook_styles.Z,docs:{page:Datagrid_docs_page},layout:"fullscreen"},argTypes:{featureFlags:{table:{disable:!0}}},excludeStories:["getBatchActions"]};var getColumns=function getColumns(rows){return[{Header:"Row Index",accessor:function accessor(row,i){return i},sticky:"left",id:"rowIndex",width:getAutoSizedColumnWidth(rows,"rowIndex","Row Index"),className:"test-column"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName",width:getAutoSizedColumnWidth(rows,"lastName","Last name")},{Header:"Age",accessor:"age",width:getAutoSizedColumnWidth(rows,"age","Age")},{Header:"Visits",accessor:"visits",width:getAutoSizedColumnWidth(rows,"visits","Visits")},{Header:"Status",accessor:"status",width:getAutoSizedColumnWidth(rows,"status","Status")},{Header:"Joined",accessor:"joined",Cell:function Cell(_ref){var value=_ref.cell.value;return react.createElement("span",null,value.toLocaleDateString())}},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"}]},BasicUsage=function BasicUsage(){var data=Datagrid_stories_slicedToArray((0,react.useState)((0,makeData._l)(10)),1)[0],columns=react.useMemo((function(){return[].concat(Datagrid_stories_toConsumableArray(getColumns(data)),[{Header:"Someone 11",accessor:"someone11",multiLineWrap:!0}])}),[]),rows=react.useMemo((function(){return data}),[data]),datagridState=(0,useDatagrid.Z)({columns,data:rows,onColResizeEnd:function onColResizeEnd(currentColumn,allColumns){return console.log(currentColumn,allColumns)}});return react.createElement(Datagrid.c,{datagridState,title:"Basic usage"})},EmptyState=function EmptyState(){var data=Datagrid_stories_slicedToArray((0,react.useState)((0,makeData._l)(0)),1)[0],columns=react.useMemo((function(){return getColumns(data)}),[]),emptyStateAction={text:"Create new",onClick:(0,dist.aD)("Clicked empty state action button"),renderIcon:bucket_0.mm,iconDescription:"Add icon"},datagridState=(0,useDatagrid.Z)({columns,data,illustrationTheme:"light",DatagridActions:DatagridActions.D,DatagridBatchActions,DatagridPagination:DatagridPagination.N,emptyStateDescription:"Description explaining why the table is empty",emptyStateTitle:"Empty state title",emptyStateSize:"lg",emptyStateAction,emptyStateLink:{text:"View documentation",href:"https://www.carbondesignsystem.com"}});return react.createElement(Datagrid.c,{datagridState:Datagrid_stories_objectSpread({},datagridState)})},InitialLoad=function InitialLoad(){var _useState6=Datagrid_stories_slicedToArray((0,react.useState)((0,makeData._l)(0)),2),data=_useState6[0],setData=_useState6[1],columns=react.useMemo((function(){return getColumns(data)}),[]),_useState8=Datagrid_stories_slicedToArray((0,react.useState)(!1),2),isFetching=_useState8[0],setIsFetching=_useState8[1];(0,react.useEffect)((function(){!function fetchData(){new Promise((function(resolve){setIsFetching(!0),setTimeout((function(){setData(data.concat((0,makeData._l)(30,5,2))),resolve()}),1e3)})).then((function(){return setIsFetching(!1)}))}()}),[]);var datagridState=(0,useDatagrid.Z)({columns,data,isFetching,emptyStateTitle:"Empty state title",emptyStateDescription:"Description explaining why the table is empty"});return react.createElement(Datagrid.c,{datagridState:Datagrid_stories_objectSpread({},datagridState)})},InfiniteScroll=function InfiniteScroll(){var _useState10=Datagrid_stories_slicedToArray((0,react.useState)((0,makeData._l)(0)),2),data=_useState10[0],setData=_useState10[1],columns=react.useMemo((function(){return getColumns(data)}),[]),_useState12=Datagrid_stories_slicedToArray((0,react.useState)(!1),2),isFetching=_useState12[0],setIsFetching=_useState12[1],fetchData=function fetchData(){return new Promise((function(resolve){setIsFetching(!0),setTimeout((function(){setData(data.concat((0,makeData._l)(30,5,2))),setIsFetching(!1),resolve()}),1e3)}))};(0,react.useEffect)((function(){fetchData()}),[]);var datagridState=(0,useDatagrid.Z)({columns,data,isFetching,fetchMoreData:fetchData,virtualHeight:540,emptyStateTitle:"Empty state title",emptyStateDescription:"Description explaining why the table is empty"},Datagrid_useInfiniteScroll);return react.createElement(Wrapper,null,react.createElement(Datagrid.c,{datagridState:Datagrid_stories_objectSpread({},datagridState)}))},WithVirtualizedData=function WithVirtualizedData(){var data=Datagrid_stories_slicedToArray((0,react.useState)((0,makeData._l)(1e4)),1)[0],columns=react.useMemo((function(){return getColumns(data)}),[]),datagridState=(0,useDatagrid.Z)({columns,data},Datagrid_useInfiniteScroll);return react.createElement(Datagrid.c,{datagridState:Datagrid_stories_objectSpread({},datagridState)})},Pagination=function Pagination(){var data=Datagrid_stories_slicedToArray((0,react.useState)((0,makeData._l)(100)),1)[0],columns=react.useMemo((function(){return getColumns(data)}),[]),datagridState=(0,useDatagrid.Z)({columns,data,initialState:{pageSize:25,pageSizes:[5,10,25,50]},DatagridPagination:DatagridPagination.N});return react.createElement(Datagrid.c,{datagridState:Datagrid_stories_objectSpread({},datagridState)})},SelectableRow=function SelectableRow(){var data=Datagrid_stories_slicedToArray((0,react.useState)((0,makeData._l)(10)),1)[0],columns=react.useMemo((function(){return getColumns(data)}),[]),datagridState=(0,useDatagrid.Z)({columns,data,DatagridActions:DatagridActions.D,batchActions:!0,toolbarBatchActions:getBatchActions(),emptyStateTitle:"Empty state title",emptyStateDescription:"Description explaining why the table is empty",onRowSelect:function onRowSelect(row,event){return console.log(row,event)},endPlugins:[Datagrid_useDisableSelectRows],shouldDisableSelectRow:function shouldDisableSelectRow(row){return"0"===row.id}},useSelectRows.Z,useStickyColumn.Z);return react.createElement(Datagrid.c,{datagridState:Datagrid_stories_objectSpread({},datagridState)})},RadioSelect=function RadioSelect(){var data=Datagrid_stories_slicedToArray((0,react.useState)((0,makeData._l)(10)),1)[0],columns=react.useMemo((function(){return getColumns(data)}),[]),datagridState=(0,useDatagrid.Z)({columns,data,hideSelectAll:!0,radio:!0,onRadioSelect:function onRadioSelect(row){return console.log("Row clicked: ".concat(row.id))},initialState:{selectedRowIds:{3:!0}}},useSelectRows.Z,useStickyColumn.Z);return react.createElement(Datagrid.c,{datagridState:Datagrid_stories_objectSpread({},datagridState)})},HideSelectAll=function HideSelectAll(){var data=Datagrid_stories_slicedToArray((0,react.useState)((0,makeData._l)(10)),1)[0],columns=react.useMemo((function(){return getColumns(data)}),[]),datagridState=(0,useDatagrid.Z)({columns,data,hideSelectAll:!0},useSelectRows.Z);return react.createElement(Datagrid.c,{datagridState:Datagrid_stories_objectSpread({},datagridState)})},SortableColumns=function SortableColumns(){var data=Datagrid_stories_slicedToArray((0,react.useState)((0,makeData._l)(10)),1)[0],columns=react.useMemo((function(){return getColumns(data)}),[]),datagridState=(0,useDatagrid.Z)({columns,data,ascendingSortableLabelText:"ascending",descendingSortableLabelText:"descending",defaultSortableLabelText:"none",initialState:{sortableColumn:{id:"firstName",order:"ASC"}}},useSortableColumns.Z);return react.createElement(Datagrid.c,{datagridState})},ActionsDropdown=function ActionsDropdown(){var data=Datagrid_stories_slicedToArray((0,react.useState)((0,makeData._l)(10)),1)[0],columns=react.useMemo((function(){return getColumns(data)}),[]),datagridState=(0,useDatagrid.Z)({columns,data,DatagridActions:DatagridActions.D,DatagridBatchActions,rowSizeProps:{labels:{rowSizeLabels:{xl:"Extra large",lg:"Large (default)",md:"Medium",sm:"Small",xs:"Extra small"},legendText:"Row settings"}}},useSelectRows.Z);return react.createElement(Datagrid.c,{datagridState:Datagrid_stories_objectSpread({},datagridState)})},DatagridBatchActions=function DatagridBatchActions(datagridState){var selectedFlatRows=datagridState.selectedFlatRows,toggleAllRowsSelected=datagridState.toggleAllRowsSelected,totalSelected=selectedFlatRows&&selectedFlatRows.length;return react.createElement(es.iG6,{shouldShowBatchActions:totalSelected>0,totalSelected,onCancel:function onCancel(){return toggleAllRowsSelected(!1)}},react.createElement(es.$oH,{renderIcon:function renderIcon(props){return react.createElement(bucket_0.cS,_extends({size:16},props))},onClick:function onBatchAction(){return alert("Batch action")}},"Action"))},getBatchActions=function getBatchActions(){return[{label:"Duplicate",renderIcon:function renderIcon(props){return react.createElement(bucket_0.mm,_extends({size:16},props))},onClick:(0,dist.aD)("Clicked batch action button")},{label:"Add",renderIcon:function renderIcon(props){return react.createElement(bucket_0.mm,_extends({size:16},props))},onClick:(0,dist.aD)("Clicked batch action button")},{label:"Publish to catalog",renderIcon:function renderIcon(props){return react.createElement(bucket_0.mm,_extends({size:16},props))},onClick:(0,dist.aD)("Clicked batch action button")},{label:"Download",renderIcon:function renderIcon(props){return react.createElement(bucket_0.mm,_extends({size:16},props))},onClick:(0,dist.aD)("Clicked batch action button")},{label:"Delete",renderIcon:function renderIcon(props){return react.createElement(bucket_0.mm,_extends({size:16},props))},onClick:(0,dist.aD)("Clicked batch action button"),hasDivider:!0,kind:"danger"}]},BatchActions=function BatchActions(){var data=Datagrid_stories_slicedToArray((0,react.useState)((0,makeData._l)(10)),1)[0],columns=react.useMemo((function(){return[].concat(Datagrid_stories_toConsumableArray(getColumns(data)),[{Header:"",accessor:"actions",sticky:"right",isAction:!0}])}),[]),datagridState=(0,useDatagrid.Z)({columns,data,batchActions:!0,toolbarBatchActions:getBatchActions(),DatagridActions:DatagridActions.D,DatagridBatchActions,rowActions:function getRowActions(){return[{id:"edit",itemText:"Edit",icon:bucket_5.I8,onClick:(0,dist.aD)("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:bucket_16.ZN,onClick:(0,dist.aD)("Clicked row action: delete")}]}(),onRowSelect:function onRowSelect(row,event){return console.log("onRowClick: ",row,event)},onAllRowSelect:function onAllRowSelect(rows,event){return console.log("onAllRowsClick called",rows,event)},batchActionMenuButtonLabel:"More"},useSelectRows.Z,useActionsColumn.Z,useStickyColumn.Z);return react.createElement(Datagrid.c,{datagridState:Datagrid_stories_objectSpread({},datagridState),ariaToolbarLabel:"batch actions toolbar"})},DisableSelectRow=function DisableSelectRow(){var data=Datagrid_stories_slicedToArray((0,react.useState)((0,makeData._l)(10)),1)[0],columns=react.useMemo((function(){return getColumns(data)}),[]),datagridState=(0,useDatagrid.Z)({columns,data,DatagridActions:DatagridActions.D,DatagridBatchActions,endPlugins:[Datagrid_useDisableSelectRows],shouldDisableSelectRow:function shouldDisableSelectRow(row){return row.id%2==0},disableSelectAll:!0},useSelectRows.Z);return react.createElement(Datagrid.c,{datagridState:Datagrid_stories_objectSpread({},datagridState)})},FrozenColumns=function FrozenColumns(){var data=Datagrid_stories_slicedToArray((0,react.useState)((0,makeData._l)(10)),1)[0],columns=react.useMemo((function(){return[].concat(Datagrid_stories_toConsumableArray(getColumns(data)),[{Header:"",accessor:"actions",sticky:"right",isAction:!0}])}),[]),_useState34=Datagrid_stories_slicedToArray((0,react.useState)(""),2),msg=_useState34[0],setMsg=_useState34[1],onActionClick=function onActionClick(actionId,row){var original=row.original;setMsg("Clicked [".concat(actionId,"] on row: <").concat(original.firstName," ").concat(original.lastName,">"))},datagridState=(0,useDatagrid.Z)({columns,data,batchActions:!0,toolbarBatchActions:getBatchActions(),DatagridActions:DatagridActions.D,DatagridBatchActions,rowActions:[{id:"edit",itemText:"Edit",onClick:onActionClick},{id:"vote",itemText:"Vote",onClick:onActionClick,shouldHideMenuItem:function shouldHideMenuItem(row){return row.original.age<=18}},{id:"retire",itemText:"Retire",onClick:onActionClick,disabled:!1,shouldDisableMenuItem:function shouldDisableMenuItem(row){return row.original.age<=60}},{id:"delete",itemText:"Delete",hasDivider:!0,isDelete:!0,onClick:onActionClick}]},useStickyColumn.Z,useActionsColumn.Z,useSelectRows.Z,Datagrid_useSelectAllToggle);return react.createElement(Wrapper,null,react.createElement(Datagrid.c,{datagridState:Datagrid_stories_objectSpread({},datagridState)}),react.createElement("p",null,msg),_p||(_p=react.createElement("p",null,"More details documentation check the Notes section below")))},Skeleton=function Skeleton(){var data=Datagrid_stories_slicedToArray((0,react.useState)([]),1)[0],columns=react.useMemo((function(){return Datagrid_stories_toConsumableArray(getColumns(data))}),[]),datagridState=(0,useDatagrid.Z)({columns,data,isFetching:!0,emptyStateDescription:"Description explaining why the table is empty",emptyStateTitle:"Empty state title"});return react.createElement(Datagrid.c,{datagridState})};BasicUsage.parameters={...BasicUsage.parameters,docs:{...BasicUsage.parameters?.docs,source:{originalSource:"() => {\n  const [data] = useState(makeData(10));\n  const columns = React.useMemo(() => [...getColumns(data), {\n    Header: 'Someone 11',\n    accessor: 'someone11',\n    multiLineWrap: true //If `multiLineWrap` is required only for specific columns\n  }], []);\n  const rows = React.useMemo(() => data, [data]);\n  const datagridState = useDatagrid({\n    columns,\n    data: rows,\n    onColResizeEnd: (currentColumn, allColumns) => console.log(currentColumn, allColumns)\n  });\n  return <Datagrid datagridState={datagridState} title=\"Basic usage\" />;\n}",...BasicUsage.parameters?.docs?.source}}},EmptyState.parameters={...EmptyState.parameters,docs:{...EmptyState.parameters?.docs,source:{originalSource:"() => {\n  const [data] = useState(makeData(0));\n  const columns = React.useMemo(() => getColumns(data), []);\n  const emptyStateTitle = 'Empty state title';\n  const emptyStateDescription = 'Description explaining why the table is empty';\n  const emptyStateSize = 'lg';\n  const illustrationTheme = 'light';\n  const emptyStateAction = {\n    text: 'Create new',\n    onClick: action('Clicked empty state action button'),\n    renderIcon: Add,\n    iconDescription: 'Add icon'\n  };\n  const emptyStateLink = {\n    text: 'View documentation',\n    href: 'https://www.carbondesignsystem.com'\n  };\n  const datagridState = useDatagrid({\n    columns,\n    data,\n    illustrationTheme,\n    DatagridActions,\n    DatagridBatchActions,\n    DatagridPagination,\n    emptyStateDescription,\n    emptyStateTitle,\n    emptyStateSize,\n    emptyStateAction,\n    emptyStateLink\n  });\n  return <Datagrid datagridState={{\n    ...datagridState\n  }} />;\n}",...EmptyState.parameters?.docs?.source}}},InitialLoad.parameters={...InitialLoad.parameters,docs:{...InitialLoad.parameters?.docs,source:{originalSource:"() => {\n  const [data, setData] = useState(makeData(0));\n  const columns = React.useMemo(() => getColumns(data), []);\n  const [isFetching, setIsFetching] = useState(false);\n  const fetchData = () => new Promise(resolve => {\n    setIsFetching(true);\n    setTimeout(() => {\n      setData(data.concat(makeData(30, 5, 2)));\n      resolve();\n    }, 1000);\n  }).then(() => setIsFetching(false));\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const emptyStateTitle = 'Empty state title';\n  const emptyStateDescription = 'Description explaining why the table is empty';\n  const datagridState = useDatagrid({\n    columns,\n    data,\n    isFetching,\n    emptyStateTitle,\n    emptyStateDescription\n  });\n  return <Datagrid datagridState={{\n    ...datagridState\n  }} />;\n}",...InitialLoad.parameters?.docs?.source}}},InfiniteScroll.parameters={...InfiniteScroll.parameters,docs:{...InfiniteScroll.parameters?.docs,source:{originalSource:"() => {\n  const [data, setData] = useState(makeData(0));\n  const columns = React.useMemo(() => getColumns(data), []);\n  const [isFetching, setIsFetching] = useState(false);\n  const fetchData = () => new Promise(resolve => {\n    setIsFetching(true);\n    setTimeout(() => {\n      setData(data.concat(makeData(30, 5, 2)));\n      setIsFetching(false);\n      resolve();\n    }, 1000);\n  });\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const datagridState = useDatagrid({\n    columns,\n    data,\n    isFetching,\n    fetchMoreData: fetchData,\n    virtualHeight: 540,\n    emptyStateTitle: 'Empty state title',\n    emptyStateDescription: 'Description explaining why the table is empty'\n  }, useInfiniteScroll);\n  return <Wrapper>\n      <Datagrid datagridState={{\n      ...datagridState\n    }} />\n    </Wrapper>;\n}",...InfiniteScroll.parameters?.docs?.source}}},WithVirtualizedData.parameters={...WithVirtualizedData.parameters,docs:{...WithVirtualizedData.parameters?.docs,source:{originalSource:"() => {\n  const [data] = useState(makeData(10000));\n  const columns = React.useMemo(() => getColumns(data), []);\n  const datagridState = useDatagrid({\n    columns,\n    data\n  }, useInfiniteScroll);\n  return <Datagrid datagridState={{\n    ...datagridState\n  }} />;\n}",...WithVirtualizedData.parameters?.docs?.source}}},Pagination.parameters={...Pagination.parameters,docs:{...Pagination.parameters?.docs,source:{originalSource:"() => {\n  const [data] = useState(makeData(100));\n  const columns = React.useMemo(() => getColumns(data), []);\n  const datagridState = useDatagrid({\n    columns,\n    data,\n    initialState: {\n      pageSize: 25,\n      pageSizes: [5, 10, 25, 50]\n    },\n    DatagridPagination\n  });\n  return <Datagrid datagridState={{\n    ...datagridState\n  }} />;\n}",...Pagination.parameters?.docs?.source}}},SelectableRow.parameters={...SelectableRow.parameters,docs:{...SelectableRow.parameters?.docs,source:{originalSource:"() => {\n  const [data] = useState(makeData(10));\n  const columns = React.useMemo(() => getColumns(data), []);\n  const emptyStateTitle = 'Empty state title';\n  const emptyStateDescription = 'Description explaining why the table is empty';\n  const datagridState = useDatagrid({\n    columns,\n    data,\n    DatagridActions,\n    batchActions: true,\n    toolbarBatchActions: getBatchActions(),\n    emptyStateTitle,\n    emptyStateDescription,\n    onRowSelect: (row, event) => console.log(row, event),\n    endPlugins: [useDisableSelectRows],\n    shouldDisableSelectRow: row => row.id === '0'\n  }, useSelectRows, useStickyColumn);\n  return <Datagrid datagridState={{\n    ...datagridState\n  }} />;\n}",...SelectableRow.parameters?.docs?.source}}},RadioSelect.parameters={...RadioSelect.parameters,docs:{...RadioSelect.parameters?.docs,source:{originalSource:"() => {\n  const [data] = useState(makeData(10));\n  const columns = React.useMemo(() => getColumns(data), []);\n  const datagridState = useDatagrid({\n    columns,\n    data,\n    hideSelectAll: true,\n    radio: true,\n    onRadioSelect: row => console.log(`Row clicked: ${row.id}`),\n    initialState: {\n      selectedRowIds: {\n        3: true\n      }\n    }\n  }, useSelectRows, useStickyColumn);\n  return <Datagrid datagridState={{\n    ...datagridState\n  }} />;\n}",...RadioSelect.parameters?.docs?.source}}},HideSelectAll.parameters={...HideSelectAll.parameters,docs:{...HideSelectAll.parameters?.docs,source:{originalSource:"() => {\n  const [data] = useState(makeData(10));\n  const columns = React.useMemo(() => getColumns(data), []);\n  const datagridState = useDatagrid({\n    columns,\n    data,\n    hideSelectAll: true\n  }, useSelectRows);\n  return <Datagrid datagridState={{\n    ...datagridState\n  }} />;\n}",...HideSelectAll.parameters?.docs?.source}}},SortableColumns.parameters={...SortableColumns.parameters,docs:{...SortableColumns.parameters?.docs,source:{originalSource:"() => {\n  const [data] = useState(makeData(10));\n  const columns = React.useMemo(() => getColumns(data), []);\n  const datagridState = useDatagrid({\n    columns,\n    data,\n    ascendingSortableLabelText: 'ascending',\n    descendingSortableLabelText: 'descending',\n    defaultSortableLabelText: 'none',\n    initialState: {\n      sortableColumn: {\n        id: 'firstName',\n        order: 'ASC'\n      }\n    }\n  }, useSortableColumns);\n  return <Datagrid datagridState={datagridState} />;\n}",...SortableColumns.parameters?.docs?.source}}},ActionsDropdown.parameters={...ActionsDropdown.parameters,docs:{...ActionsDropdown.parameters?.docs,source:{originalSource:"() => {\n  const [data] = useState(makeData(10));\n  const columns = React.useMemo(() => getColumns(data), []);\n  const datagridState = useDatagrid({\n    columns,\n    data,\n    DatagridActions,\n    DatagridBatchActions,\n    rowSizeProps: {\n      labels: {\n        rowSizeLabels: {\n          xl: 'Extra large',\n          lg: 'Large (default)',\n          md: 'Medium',\n          sm: 'Small',\n          xs: 'Extra small'\n        },\n        legendText: 'Row settings'\n      }\n    }\n  }, useSelectRows);\n  return <Datagrid datagridState={{\n    ...datagridState\n  }} />;\n}",...ActionsDropdown.parameters?.docs?.source}}},BatchActions.parameters={...BatchActions.parameters,docs:{...BatchActions.parameters?.docs,source:{originalSource:"() => {\n  const [data] = useState(makeData(10));\n  const columns = React.useMemo(() => [...getColumns(data), {\n    Header: '',\n    accessor: 'actions',\n    sticky: 'right',\n    isAction: true\n  }], []);\n  const getRowActions = () => {\n    return [{\n      id: 'edit',\n      itemText: 'Edit',\n      icon: Edit,\n      onClick: action('Clicked row action: edit')\n    }, {\n      id: 'delete',\n      itemText: 'Delete',\n      icon: TrashCan,\n      onClick: action('Clicked row action: delete')\n    }];\n  };\n  const datagridState = useDatagrid({\n    columns,\n    data,\n    batchActions: true,\n    toolbarBatchActions: getBatchActions(),\n    DatagridActions,\n    DatagridBatchActions,\n    rowActions: getRowActions(),\n    onRowSelect: (row, event) => console.log('onRowClick: ', row, event),\n    onAllRowSelect: (rows, event) => console.log('onAllRowsClick called', rows, event),\n    batchActionMenuButtonLabel: 'More'\n  }, useSelectRows, useActionsColumn, useStickyColumn);\n  return <Datagrid datagridState={{\n    ...datagridState\n  }} ariaToolbarLabel=\"batch actions toolbar\" />;\n}",...BatchActions.parameters?.docs?.source}}},DisableSelectRow.parameters={...DisableSelectRow.parameters,docs:{...DisableSelectRow.parameters?.docs,source:{originalSource:"() => {\n  const [data] = useState(makeData(10));\n  const columns = React.useMemo(() => getColumns(data), []);\n  const datagridState = useDatagrid({\n    columns,\n    data,\n    DatagridActions,\n    DatagridBatchActions,\n    endPlugins: [useDisableSelectRows],\n    shouldDisableSelectRow: row => row.id % 2 === 0,\n    disableSelectAll: true\n  }, useSelectRows);\n  return <Datagrid datagridState={{\n    ...datagridState\n  }} />;\n}",...DisableSelectRow.parameters?.docs?.source}}},FrozenColumns.parameters={...FrozenColumns.parameters,docs:{...FrozenColumns.parameters?.docs,source:{originalSource:"() => {\n  const [data] = useState(makeData(10));\n  const columns = React.useMemo(() => [...getColumns(data), {\n    Header: '',\n    accessor: 'actions',\n    sticky: 'right',\n    isAction: true\n  }], []);\n  const [msg, setMsg] = useState('');\n  const onActionClick = (actionId, row) => {\n    const {\n      original\n    } = row;\n    setMsg(`Clicked [${actionId}] on row: <${original.firstName} ${original.lastName}>`);\n  };\n  const datagridState = useDatagrid({\n    columns,\n    data,\n    batchActions: true,\n    toolbarBatchActions: getBatchActions(),\n    DatagridActions,\n    DatagridBatchActions,\n    rowActions: [{\n      id: 'edit',\n      itemText: 'Edit',\n      onClick: onActionClick\n    }, {\n      id: 'vote',\n      itemText: 'Vote',\n      onClick: onActionClick,\n      shouldHideMenuItem: row => row.original.age <= 18\n    }, {\n      id: 'retire',\n      itemText: 'Retire',\n      onClick: onActionClick,\n      disabled: false,\n      shouldDisableMenuItem: row => row.original.age <= 60\n    }, {\n      id: 'delete',\n      itemText: 'Delete',\n      hasDivider: true,\n      isDelete: true,\n      onClick: onActionClick\n    }]\n  }, useStickyColumn, useActionsColumn, useSelectRows, useSelectAllWithToggle);\n  return <Wrapper>\n      <Datagrid datagridState={{\n      ...datagridState\n    }} />\n      <p>{msg}</p>\n      <p>More details documentation check the Notes section below</p>\n    </Wrapper>;\n}",...FrozenColumns.parameters?.docs?.source}}},Skeleton.parameters={...Skeleton.parameters,docs:{...Skeleton.parameters?.docs,source:{originalSource:"() => {\n  const [data] = useState([]);\n  const columns = React.useMemo(() => [...getColumns(data)], []);\n  const emptyStateTitle = 'Empty state title';\n  const emptyStateDescription = 'Description explaining why the table is empty';\n  const datagridState = useDatagrid({\n    columns,\n    data,\n    isFetching: true,\n    emptyStateDescription,\n    emptyStateTitle\n  });\n  return <Datagrid datagridState={datagridState} />;\n}",...Skeleton.parameters?.docs?.source}}};const __namedExportsOrder=["BasicUsage","EmptyState","InitialLoad","InfiniteScroll","WithVirtualizedData","Pagination","SelectableRow","RadioSelect","HideSelectAll","SortableColumns","ActionsDropdown","getBatchActions","BatchActions","DisableSelectRow","FrozenColumns","Skeleton"]},"../ibm-products/src/components/Datagrid/useActionsColumn.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_carbon_react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@carbon/react/es/index.js"),_settings__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../ibm-products/src/settings.js"),_global_js_utils_props_helper__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../ibm-products/src/global/js/utils/props-helper.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}var _excluded=["align","id","itemText","onClick","icon","shouldHideMenuItem","shouldDisableMenuItem","disabled"],_excluded2=["id","onClick","shouldHideMenuItem","shouldDisableMenuItem","disabled"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!==_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var blockClass="".concat(_settings__WEBPACK_IMPORTED_MODULE_5__.K.prefix,"--datagrid");const __WEBPACK_DEFAULT_EXPORT__=function useActionsColumn(hooks){hooks.useInstance.push((function useStickyHeaderWidth(instance){var rowActions=instance.rowActions;if(rowActions&&Array.isArray(rowActions)){hooks.getHeaderProps.push((function addHeaderWidth(props,cellData){var column=cellData.column;if(column.isAction){var isColumnSticky=!!column.sticky;return[props,{style:_objectSpread(_objectSpread({},props.style),{},{width:rowActions.length>2||isColumnSticky?48:96})}]}return[props]}))}})),hooks.useInstance.push((function useAttachActionsOnInstance(instance){var rowActions=instance.rowActions,isFetching=instance.isFetching,selectedRowIds=instance.state.selectedRowIds,getDisabledState=function getDisabledState(rowIndex){return!!Object.keys(selectedRowIds).map((function(n){return Number(n)})).includes(rowIndex)};if(rowActions&&Array.isArray(rowActions)){hooks.getCellProps.push((function addActionsMenu(props,cellData){var cell=cellData.cell,row=cell.row,column=cell.column;if(column.isAction){var isColumnSticky=!!column.sticky;return[props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{className:"".concat(blockClass,"__actions-column-contents"),children:[isFetching&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_carbon_react__WEBPACK_IMPORTED_MODULE_2__.csT,{className:"".concat(blockClass,"__actions-column-loading")}),!isFetching&&rowActions.length<=2&&!isColumnSticky&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{className:"".concat(blockClass,"_actions-column"),style:{display:"flex"},children:rowActions.map((function(action,index){var preparedActionProps=(0,_global_js_utils_props_helper__WEBPACK_IMPORTED_MODULE_3__.eG)(action,["isDelete"]),align=preparedActionProps.align,id=preparedActionProps.id,itemText=preparedActionProps.itemText,_onClick=preparedActionProps.onClick,icon=preparedActionProps.icon,shouldHideMenuItem=preparedActionProps.shouldHideMenuItem,shouldDisableMenuItem=preparedActionProps.shouldDisableMenuItem,disabled=preparedActionProps.disabled,rest=_objectWithoutProperties(preparedActionProps,_excluded),hidden="function"==typeof shouldHideMenuItem&&shouldHideMenuItem(row),isDisabledByRow="function"==typeof shouldDisableMenuItem?shouldDisableMenuItem(row):disabled;if(hidden)return null;var Icon=icon;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("".concat(blockClass,"__actions-column-button"),_defineProperty({},"".concat(blockClass,"__disabled-row-action-button"),getDisabledState(row.index))),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_carbon_react__WEBPACK_IMPORTED_MODULE_2__.hU,_objectSpread(_objectSpread({},rest),{},{align:align||"top",label:itemText,kind:"ghost",name:itemText,className:classnames__WEBPACK_IMPORTED_MODULE_1___default()(_defineProperty({},"".concat(blockClass,"__disabled-row-action"),getDisabledState(row.index))),onClick:function onClick(e){getDisabledState(row.index)||(e.stopPropagation(),_onClick(id,row,e))},disabled:isDisabledByRow,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(Icon,{})}))},"".concat(itemText,"__").concat(index))}))}),!isFetching&&(rowActions.length>2||isColumnSticky)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_carbon_react__WEBPACK_IMPORTED_MODULE_2__.PQB,{align:"left",size:"sm",flipped:!0,onClick:function onClick(e){e.stopPropagation()},children:rowActions.map((function(action){var id=action.id,_onClick2=action.onClick,shouldHideMenuItem=action.shouldHideMenuItem,shouldDisableMenuItem=action.shouldDisableMenuItem,disabled=action.disabled,rest=_objectWithoutProperties(action,_excluded2),hidden="function"==typeof shouldHideMenuItem&&shouldHideMenuItem(row),isDisabledByRow="function"==typeof shouldDisableMenuItem?shouldDisableMenuItem(row):disabled;return hidden?null:(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_carbon_react__WEBPACK_IMPORTED_MODULE_2__.laM,_objectSpread(_objectSpread({},rest),{},{disabled:isDisabledByRow,onClick:function onClick(e){e.stopPropagation(),_onClick2(id,row,e)},key:id}))}))})})]}),className:classnames__WEBPACK_IMPORTED_MODULE_1___default()(_defineProperty(_defineProperty(_defineProperty({},"".concat(blockClass,"__actions-column-cell"),!0),"".concat(blockClass,"__cell"),!0),"".concat(blockClass,"__actions-column-cell-non-sticky"),!isColumnSticky)),style:{width:rowActions.length>2||isColumnSticky?48:96}}]}return[props]}))}}))}},"../ibm-products/src/components/Datagrid/useStickyColumn.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),lodash_debounce__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/lodash/debounce.js"),lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_1__),classnames__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__),_settings__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../ibm-products/src/settings.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!==_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var blockClass="".concat(_settings__WEBPACK_IMPORTED_MODULE_3__.K.prefix,"--datagrid"),styleClassPrefix="".concat(blockClass,"__right-sticky-column"),leftStickyStyleClassPrefix="".concat(blockClass,"__left-sticky-column"),OFFSET_SCROLL_CLASS="".concat(styleClassPrefix,"-offset-scroll"),addTableBodyProps=function addTableBodyProps(tableBodyRef,props){return[props,{ref:tableBodyRef}]},changeProps=function changeProps(elementName,headerCellRef,windowSize,props,data){var _data$instance,column=data.column||data.cell.column;return"right"===column.sticky?[props,_objectSpread({className:classnames__WEBPACK_IMPORTED_MODULE_2___default()(_defineProperty(_defineProperty(_defineProperty({},"".concat(styleClassPrefix,"-").concat(elementName),!0),"".concat(blockClass,"__resizableColumn"),!1),"".concat(blockClass,"__sortableColumn"),!1))},headerCellRef&&{ref:headerCellRef})]:"left"===column.sticky?[props,_objectSpread({className:classnames__WEBPACK_IMPORTED_MODULE_2___default()(_defineProperty(_defineProperty({},"".concat(leftStickyStyleClassPrefix,"-").concat(elementName),windowSize>671),"".concat(leftStickyStyleClassPrefix,"-").concat(elementName,"--with-extra-select-column"),(null==data||null===(_data$instance=data.instance)||void 0===_data$instance?void 0:_data$instance.withSelectRows)&&windowSize>671))},headerCellRef&&{ref:headerCellRef})]:[props]},onBodyResize=function onBodyResize(tableBodyEle,headerCellEle){headerCellEle&&(hasVertScroll(tableBodyEle)?headerCellEle.classList.add(OFFSET_SCROLL_CLASS):headerCellEle.classList.remove(OFFSET_SCROLL_CLASS),toggleStickyShadow(tableBodyEle,headerCellEle))},toggleStickyShadow=function toggleStickyShadow(tableBodyEle,headerCellEle){tableBodyEle&&headerCellEle&&(tableBodyEle.scrollLeft+tableBodyEle.clientWidth===tableBodyEle.scrollWidth?(headerCellEle.classList.add("".concat(blockClass,"__sticky-noShadow")),tableBodyEle.classList.add("".concat(blockClass,"__sticky-column-noShadow"))):(headerCellEle.classList.remove("".concat(blockClass,"__sticky-noShadow")),tableBodyEle.classList.remove("".concat(blockClass,"__sticky-column-noShadow"))))},hasVertScroll=function hasVertScroll(element){return!!element&&element.scrollHeight>element.clientHeight};const __WEBPACK_DEFAULT_EXPORT__=function useStickyColumn(hooks){var tableBodyRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(),stickyHeaderCellRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(),_useState2=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),2),windowSize=_useState2[0],setWindowSize=_useState2[1];(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){setWindowSize(window.innerWidth)}),[]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)((function(){function updateSize(){setWindowSize(window.innerWidth)}return window.addEventListener("resize",updateSize),function(){return window.removeEventListener("resize",updateSize)}}),[]),hooks.getCellProps.push(changeProps.bind(null,"cell",null,windowSize)),hooks.getHeaderProps.push(changeProps.bind(null,"header",stickyHeaderCellRef,windowSize)),hooks.getTableBodyProps.push(addTableBodyProps.bind(null,tableBodyRef)),hooks.getHeaderGroupProps.push((function(props){return[props,{style:_objectSpread(_objectSpread({},props.style),{},{minWidth:"unset"})}]}));hooks.useInstance.push((function useEventListener(instance){(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){var tableBodyElement=tableBodyRef.current,headerCellElement=stickyHeaderCellRef.current;hasVertScroll(tableBodyElement)&&headerCellElement&&headerCellElement.classList.add(OFFSET_SCROLL_CLASS);var boundListener=lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default()(onBodyResize.bind(null,tableBodyElement,headerCellElement),250);return"undefined"!=typeof window&&window.addEventListener("resize",boundListener),function(){"undefined"!=typeof window&&window.removeEventListener("resize",boundListener)}}),[instance.rows,instance.isFetching]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){var tableBodyElement=tableBodyRef.current,headerCellElement=stickyHeaderCellRef.current,listener=function listener(evt){toggleStickyShadow(evt.target,headerCellElement)};return toggleStickyShadow(tableBodyElement,headerCellElement),tableBodyElement&&tableBodyElement.addEventListener("scroll",listener),function(){tableBodyElement&&tableBodyElement.removeEventListener("scroll",listener)}}),[instance.rows,instance.isFetching])})),hooks.useInstance.push((function useCheckScroll(instance){var tableBodyElement=tableBodyRef.current,headerCellElement=stickyHeaderCellRef.current;(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){onBodyResize(tableBodyElement,headerCellElement)}),[instance.rows,headerCellElement,tableBodyElement])})),hooks.useInstance.push((function(instance){Object.assign(instance,{withStickyColumn:!0})})),hooks.useInstance.push((function(instance){var newColumns=instance.visibleColumns,spacerIdx=newColumns.findIndex((function(col){return"spacer"===col.id})),stickyIdx=newColumns.findIndex((function(col){return"right"===col.sticky}));if(spacerIdx>=0&&stickyIdx>=0&&stickyIdx<spacerIdx){var temp=newColumns[spacerIdx];newColumns[spacerIdx]=newColumns[stickyIdx],newColumns[stickyIdx]=temp}var newHeaders=instance.headers;if(spacerIdx=newHeaders.findIndex((function(col){return"spacer"===col.id})),stickyIdx=newHeaders.findIndex((function(col){return"right"===col.sticky})),spacerIdx>=0&&stickyIdx>=0&&stickyIdx<spacerIdx){var _temp=newHeaders[spacerIdx];newHeaders[spacerIdx]=newHeaders[stickyIdx],newHeaders[spacerIdx].canResize=!1,newHeaders[spacerIdx].disableResizing=!0,delete newHeaders[spacerIdx].getResizerProps,newHeaders[stickyIdx]=_temp}}))}},"../ibm-products/src/components/Datagrid/utils/DatagridPagination.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>DatagridPagination});__webpack_require__("../../node_modules/react/index.js");var _carbon_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@carbon/react/es/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),DatagridPagination=function DatagridPagination(_ref){var state=_ref.state,setPageSize=_ref.setPageSize,gotoPage=_ref.gotoPage,rows=_ref.rows;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_carbon_react__WEBPACK_IMPORTED_MODULE_1__.tlE,{page:state.pageIndex+1,pageSize:state.pageSize,pageSizes:state.pageSizes||[10,20,30,40,50],totalItems:rows.length,onChange:function updatePagination(_ref2){var page=_ref2.page,pageSize=_ref2.pageSize;console.log(state),setPageSize(pageSize),gotoPage(page-1)}})};DatagridPagination.displayName="DatagridPagination",DatagridPagination.__docgenInfo={description:"",methods:[],displayName:"DatagridPagination"}}}]);