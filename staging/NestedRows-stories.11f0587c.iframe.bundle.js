"use strict";(self.webpackChunk_carbon_ibm_cloud_cognitive_core=self.webpackChunk_carbon_ibm_cloud_cognitive_core||[]).push([[92],{"../ibm-products/src/components/Datagrid/Extensions/NestedRows/NestedRows.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{NestedRowsInitialUsageStory:()=>NestedRowsInitialUsageStory,NestedRowsUsageStory:()=>NestedRowsUsageStory,SelectableNestedRowsUsageStory:()=>SelectableNestedRowsUsageStory,SingleLevelNestedRowsUsageStory:()=>SingleLevelNestedRowsUsageStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>NestedRows_stories});var react=__webpack_require__("../../node_modules/react/index.js"),bucket_5=__webpack_require__("../../node_modules/@carbon/icons-react/es/generated/bucket-5.js"),bucket_16=__webpack_require__("../../node_modules/@carbon/icons-react/es/generated/bucket-16.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs"),Datagrid=__webpack_require__("../ibm-products/src/components/Datagrid/Datagrid/Datagrid.js"),useDatagrid=__webpack_require__("../ibm-products/src/components/Datagrid/useDatagrid.js"),classnames=__webpack_require__("../../node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),settings=__webpack_require__("../ibm-products/src/settings.js"),bucket_2=__webpack_require__("../../node_modules/@carbon/icons-react/es/generated/bucket-2.js"),useFocusRowExpander=__webpack_require__("../ibm-products/src/components/Datagrid/useFocusRowExpander.js"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!==_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var blockClass="".concat(settings.K.prefix,"--datagrid");const Datagrid_useNestedRowExpander=function useNestedRowExpander(hooks){var tempState=(0,react.useRef)(),lastExpandedRowIndex=(0,react.useRef)();(0,useFocusRowExpander.a)({instance:null==tempState?void 0:tempState.current,lastExpandedRowIndex:null==lastExpandedRowIndex?void 0:lastExpandedRowIndex.current,blockClass,activeElement:"undefined"!=typeof document&&document.activeElement});hooks.visibleColumns.push((function visibleColumns(columns){return[{id:"expander",Cell:function Cell(_ref){var row=_ref.row,expanderButtonProps=_objectSpread(_objectSpread({},row.getToggleRowExpandedProps()),{},{onClick:function onClick(event){event.stopPropagation(),row.toggleRowExpanded(),lastExpandedRowIndex.current=row.id}}),_ref2=(null==tempState?void 0:tempState.current)||{},_ref2$expanderButtonT=_ref2.expanderButtonTitleExpanded,expanderButtonTitleExpanded=void 0===_ref2$expanderButtonT?"Collapse row":_ref2$expanderButtonT,_ref2$expanderButtonT2=_ref2.expanderButtonTitleCollapsed,expanderButtonTitleCollapsed=void 0===_ref2$expanderButtonT2?"Expand row":_ref2$expanderButtonT2,expanderTitle=row.isExpanded?expanderButtonTitleExpanded:expanderButtonTitleCollapsed;return row.canExpand&&(0,jsx_runtime.jsx)("button",_objectSpread(_objectSpread({type:"button","aria-label":expanderTitle,className:classnames_default()("".concat(blockClass,"__row-expander"),"".concat(settings.u.prefix,"--btn"),"".concat(settings.u.prefix,"--btn--ghost"))},expanderButtonProps),{},{title:expanderTitle,children:(0,jsx_runtime.jsx)(bucket_2._Q,{className:classnames_default()("".concat(blockClass,"__expander-icon"),_defineProperty(_defineProperty({},"".concat(blockClass,"__expander-icon--not-open"),!row.isExpanded),"".concat(blockClass,"__expander-icon--open"),row.isExpanded))})}))},width:48,disableResizing:!0,disableSortBy:!0,Header:""}].concat(_toConsumableArray(columns))})),hooks.useInstance.push((function useInstance(instance){tempState.current=instance}))};function useNestedRows_typeof(o){return useNestedRows_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},useNestedRows_typeof(o)}function useNestedRows_defineProperty(obj,key,value){return(key=function useNestedRows_toPropertyKey(arg){var key=function useNestedRows_toPrimitive(input,hint){if("object"!==useNestedRows_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==useNestedRows_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===useNestedRows_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var useNestedRows_blockClass="".concat(settings.K.prefix,"--datagrid");const Datagrid_useNestedRows=function useNestedRows(hooks){Datagrid_useNestedRowExpander(hooks);hooks.useInstance.push((function useInstance(instance){(0,react.useEffect)((function(){var rows=instance.rows,expandedRowIds=instance.initialState.expandedRowIds;expandedRowIds&&Object.keys(expandedRowIds).forEach((function(key){var row=rows.filter((function(r){return r.id.toString()===key.toString()}));row.length&&key.toString()===row[0].id.toString()&&row[0].toggleRowExpanded()}))}),[instance]);Object.assign(instance,{withNestedRows:!0}),hooks.getRowProps.push((function getRowProps(props,_ref){var row=_ref.row;return[props,{className:classnames_default()(useNestedRows_defineProperty(useNestedRows_defineProperty({},"".concat(useNestedRows_blockClass,"__carbon-nested-row"),row.depth>0),"".concat(useNestedRows_blockClass,"__carbon-row-expanded"),row.isExpanded))}]})),hooks.getRowProps.push((function getRowStyles(props,_ref2){var row=_ref2.row;return[props,{style:{paddingLeft:"".concat(row.depth>1?48+32*(row.depth-1):1===row.depth?48:0,"px")}}]})),hooks.getCellProps.push((function getCellProps(props,_ref3){var cell=_ref3.cell,isFirstCell=0===_ref3.instance.columns.findIndex((function(c){return c.id===cell.column.id}));return[props,{style:{marginRight:"".concat(isFirstCell&&cell.row.depth>0?"".concat(-32*cell.row.depth-18,"px"):"")}}]}))}))};var useSelectRows=__webpack_require__("../ibm-products/src/components/Datagrid/useSelectRows.js"),_storybook_styles=__webpack_require__("../ibm-products/src/components/Datagrid/_storybook-styles.scss"),DatagridActions=__webpack_require__("../ibm-products/src/components/Datagrid/utils/DatagridActions.js"),makeData=__webpack_require__("../ibm-products/src/components/Datagrid/utils/makeData.js"),getArgTypes=__webpack_require__("../ibm-products/src/components/Datagrid/utils/getArgTypes.js"),StoryDocsPage=__webpack_require__("../ibm-products/src/global/js/utils/StoryDocsPage.js");function NestedRows_stories_typeof(o){return NestedRows_stories_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},NestedRows_stories_typeof(o)}function NestedRows_stories_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function NestedRows_stories_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?NestedRows_stories_ownKeys(Object(t),!0).forEach((function(r){NestedRows_stories_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):NestedRows_stories_ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function NestedRows_stories_defineProperty(obj,key,value){return(key=function NestedRows_stories_toPropertyKey(t){var i=function NestedRows_stories_toPrimitive(t,r){if("object"!=NestedRows_stories_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=NestedRows_stories_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==NestedRows_stories_typeof(i)?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function NestedRows_stories_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return NestedRows_stories_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return NestedRows_stories_arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function NestedRows_stories_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectDestructuringEmpty(obj){if(null==obj)throw new TypeError("Cannot destructure "+obj)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const NestedRows_stories={title:"IBM Products/Components/Datagrid/NestedRows",component:Datagrid.c,tags:["autodocs"],parameters:{storySource:{source:"function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError(\"Cannot destructure \" + obj); }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\n * Copyright IBM Corp. 2022, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useState } from 'react';\nimport { Edit, TrashCan } from '@carbon/react/icons';\nimport { action } from '@storybook/addon-actions';\nimport { Datagrid, useDatagrid, useNestedRows, useSelectRows } from '../../index';\nimport styles from '../../_storybook-styles.scss';\nimport { DatagridActions } from '../../utils/DatagridActions';\nimport { makeData } from '../../utils/makeData';\nimport { ARG_TYPES } from '../../utils/getArgTypes';\nimport { StoryDocsPage } from '../../../../global/js/utils/StoryDocsPage';\nexport default {\n  title: 'IBM Products/Components/Datagrid/NestedRows',\n  component: Datagrid,\n  tags: ['autodocs'],\n  parameters: {\n    styles: styles,\n    docs: {\n      page: function page() {\n        return /*#__PURE__*/React.createElement(StoryDocsPage, {\n          blocks: [{\n            title: 'Nested rows',\n            description: \"Nested rows allow disclosing content in data tables progressively by displaying primary data first (parent row) and enabling users to navigate secondary information levels (child rows).\\n- Include the `useNestedRows` hook\\n- Make sure that any row you want to have nested rows in your data has a `subRows` property with an array of objects for each nested row. The row expander will be included by default as long as the `useNestedRows` hook is provided and it is detected that a row has `subRows` within it.\\n          \",\n            source: {\n              code: \"\\nconst datagridState = useDatagrid(\\n  {\\n    columns,\\n    data,\\n    expanderButtonTitleExpanded: 'Collapse row',\\n    expanderButtonTitleCollapsed: 'Expand row',\\n  },\\n  useNestedRows\\n);\\n\\nreturn <Datagrid datagridState={datagridState} />;\\n            \"\n            }\n          }]\n        });\n      }\n    },\n    layout: 'fullscreen'\n  },\n  argTypes: {\n    featureFlags: {\n      table: {\n        disable: true\n      }\n    }\n  }\n};\nvar defaultHeader = [{\n  Header: 'Row Index',\n  accessor: function accessor(row, i) {\n    return i;\n  },\n  sticky: 'left',\n  id: 'rowIndex' // id is required when accessor is a function.\n}, {\n  Header: 'First Name',\n  accessor: 'firstName'\n}, {\n  Header: 'Last Name',\n  accessor: 'lastName'\n}, {\n  Header: 'Age',\n  accessor: 'age',\n  width: 50\n}, {\n  Header: 'Visits',\n  accessor: 'visits',\n  width: 60\n}, {\n  Header: 'Someone 1',\n  accessor: 'someone1'\n}, {\n  Header: 'Someone 2',\n  accessor: 'someone2'\n}, {\n  Header: 'Someone 3',\n  accessor: 'someone3'\n}, {\n  Header: 'Someone 4',\n  accessor: 'someone4'\n}, {\n  Header: 'Someone 5',\n  accessor: 'someone5'\n}, {\n  Header: 'Someone 6',\n  accessor: 'someone6'\n}, {\n  Header: 'Someone 7',\n  accessor: 'someone7'\n}, {\n  Header: 'Someone 8',\n  accessor: 'someone8'\n}, {\n  Header: 'Someone 9',\n  accessor: 'someone9'\n}, {\n  Header: 'Someone 10',\n  accessor: 'someone10'\n}];\nvar sharedDatagridProps = {\n  emptyStateTitle: 'Empty state title',\n  emptyStateDescription: 'Description text explaining why table is empty',\n  emptyStateSize: 'lg',\n  gridTitle: 'Data table title',\n  gridDescription: 'Additional information if needed',\n  useDenseHeader: false,\n  rowSize: 'lg',\n  rowSizes: [{\n    value: 'xl',\n    labelText: 'Extra large'\n  }, {\n    value: 'lg',\n    labelText: 'Large'\n  }, {\n    value: 'md',\n    labelText: 'Medium'\n  }, {\n    value: 'xs',\n    labelText: 'Small'\n  }],\n  onRowSizeChange: function onRowSizeChange(value) {\n    console.log('row size changed to: ', value);\n  },\n  rowActions: [{\n    id: 'edit',\n    itemText: 'Edit',\n    icon: Edit,\n    onClick: action('Clicked row action: edit')\n  }, {\n    id: 'delete',\n    itemText: 'Delete',\n    icon: TrashCan,\n    isDelete: true,\n    onClick: action('Clicked row action: delete')\n  }]\n};\nvar nestedRowsControlProps = {\n  gridTitle: sharedDatagridProps.gridTitle,\n  gridDescription: sharedDatagridProps.gridDescription,\n  useDenseHeader: sharedDatagridProps.useDenseHeader,\n  rowSize: sharedDatagridProps.rowSize,\n  rowSizes: sharedDatagridProps.rowSizes,\n  onRowSizeChange: sharedDatagridProps.onRowSizeChange\n};\nvar SingleLevelNestedRows = function SingleLevelNestedRows(_ref) {\n  var args = _extends({}, (_objectDestructuringEmpty(_ref), _ref));\n  var columns = React.useMemo(function () {\n    return defaultHeader;\n  }, []);\n  var _useState = useState(makeData(10, 2)),\n    _useState2 = _slicedToArray(_useState, 1),\n    data = _useState2[0];\n  var datagridState = useDatagrid(_objectSpread({\n    columns: columns,\n    data: data,\n    DatagridActions: DatagridActions\n  }, args.defaultGridProps), useNestedRows);\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: _objectSpread({}, datagridState)\n  });\n};\nvar SingleLevelNestedRowsWrapper = function SingleLevelNestedRowsWrapper(_ref2) {\n  var args = _extends({}, (_objectDestructuringEmpty(_ref2), _ref2));\n  return /*#__PURE__*/React.createElement(SingleLevelNestedRows, {\n    defaultGridProps: _objectSpread({}, args)\n  });\n};\nvar singleNestedRowsStoryName = 'With single-level nested rows';\nexport var SingleLevelNestedRowsUsageStory = SingleLevelNestedRowsWrapper.bind({});\nSingleLevelNestedRowsUsageStory.storyName = singleNestedRowsStoryName;\nSingleLevelNestedRowsUsageStory.argTypes = {\n  gridTitle: ARG_TYPES.gridTitle,\n  gridDescription: ARG_TYPES.gridDescription,\n  useDenseHeader: ARG_TYPES.useDenseHeader,\n  rowSize: ARG_TYPES.rowSize,\n  rowSizes: ARG_TYPES.rowSizes,\n  onRowSizeChange: ARG_TYPES.onRowSizeChange,\n  expanderButtonTitleExpanded: 'Collapse row',\n  expanderButtonTitleCollapsed: 'Expand row'\n};\nSingleLevelNestedRowsUsageStory.args = _objectSpread(_objectSpread({}, nestedRowsControlProps), {}, {\n  featureFlags: ['Datagrid.useNestedRows']\n});\nvar NestedRows = function NestedRows(_ref3) {\n  var args = _extends({}, (_objectDestructuringEmpty(_ref3), _ref3));\n  var columns = React.useMemo(function () {\n    return defaultHeader;\n  }, []);\n  var _useState3 = useState(makeData(10, 5, 2, 2)),\n    _useState4 = _slicedToArray(_useState3, 1),\n    data = _useState4[0];\n  var datagridState = useDatagrid(_objectSpread({\n    columns: columns,\n    data: data,\n    DatagridActions: DatagridActions\n  }, args.defaultGridProps), useNestedRows);\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: _objectSpread({}, datagridState)\n  });\n};\nvar BasicTemplateWrapper = function BasicTemplateWrapper(_ref4) {\n  var args = _extends({}, (_objectDestructuringEmpty(_ref4), _ref4));\n  return /*#__PURE__*/React.createElement(NestedRows, {\n    defaultGridProps: _objectSpread({}, args)\n  });\n};\nvar nestedRowsStoryName = 'With nested rows';\nexport var NestedRowsUsageStory = BasicTemplateWrapper.bind({});\nNestedRowsUsageStory.storyName = nestedRowsStoryName;\nNestedRowsUsageStory.argTypes = {\n  gridTitle: ARG_TYPES.gridTitle,\n  gridDescription: ARG_TYPES.gridDescription,\n  useDenseHeader: ARG_TYPES.useDenseHeader,\n  rowSize: ARG_TYPES.rowSize,\n  rowSizes: ARG_TYPES.rowSizes,\n  onRowSizeChange: ARG_TYPES.onRowSizeChange,\n  expanderButtonTitleExpanded: 'Collapse row',\n  expanderButtonTitleCollapsed: 'Expand row'\n};\nNestedRowsUsageStory.args = _objectSpread({}, nestedRowsControlProps);\nvar SelectableNestedRows = function SelectableNestedRows(_ref5) {\n  var args = _extends({}, (_objectDestructuringEmpty(_ref5), _ref5));\n  var columns = React.useMemo(function () {\n    return defaultHeader;\n  }, []);\n  var _useState5 = useState(makeData(10, 5, 2, 2)),\n    _useState6 = _slicedToArray(_useState5, 1),\n    data = _useState6[0];\n  var datagridState = useDatagrid(_objectSpread({\n    columns: columns,\n    data: data,\n    DatagridActions: DatagridActions\n  }, args.defaultGridProps), useNestedRows, useSelectRows);\n  return /*#__PURE__*/React.createElement(Datagrid, {\n    datagridState: _objectSpread({}, datagridState)\n  });\n};\nvar SelectableNestedRowTemplateWrapper = function SelectableNestedRowTemplateWrapper(_ref6) {\n  var args = _extends({}, (_objectDestructuringEmpty(_ref6), _ref6));\n  return /*#__PURE__*/React.createElement(SelectableNestedRows, {\n    defaultGridProps: _objectSpread({}, args)\n  });\n};\nvar selectableNestedRowsStoryName = 'With selectable nested rows';\nexport var SelectableNestedRowsUsageStory = SelectableNestedRowTemplateWrapper.bind({});\nSelectableNestedRowsUsageStory.storyName = selectableNestedRowsStoryName;\nSelectableNestedRowsUsageStory.argTypes = {\n  gridTitle: ARG_TYPES.gridTitle,\n  gridDescription: ARG_TYPES.gridDescription,\n  useDenseHeader: ARG_TYPES.useDenseHeader,\n  rowSize: ARG_TYPES.rowSize,\n  rowSizes: ARG_TYPES.rowSizes,\n  onRowSizeChange: ARG_TYPES.onRowSizeChange,\n  expanderButtonTitleExpanded: 'Collapse row',\n  expanderButtonTitleCollapsed: 'Expand row'\n};\nSelectableNestedRowsUsageStory.args = _objectSpread({}, nestedRowsControlProps);\nvar nestedRowsInitialStateStoryName = 'With initially expanded nested rows';\nexport var NestedRowsInitialUsageStory = BasicTemplateWrapper.bind({});\nNestedRowsInitialUsageStory.storyName = nestedRowsInitialStateStoryName;\nNestedRowsInitialUsageStory.argTypes = {\n  gridTitle: ARG_TYPES.gridTitle,\n  gridDescription: ARG_TYPES.gridDescription,\n  useDenseHeader: ARG_TYPES.useDenseHeader,\n  rowSize: ARG_TYPES.rowSize,\n  rowSizes: ARG_TYPES.rowSizes,\n  onRowSizeChange: ARG_TYPES.onRowSizeChange,\n  expanderButtonTitleExpanded: 'Collapse row',\n  expanderButtonTitleCollapsed: 'Expand row'\n};\nNestedRowsInitialUsageStory.args = _objectSpread(_objectSpread({}, nestedRowsControlProps), {}, {\n  initialState: {\n    expandedRowIds: {\n      1: true,\n      3: true\n    }\n  }\n});",locationsMap:{"single-level-nested-rows-usage-story":{startLoc:{col:35,line:175},endLoc:{col:1,line:180},startBody:{col:35,line:175},endBody:{col:1,line:180}},"nested-rows-usage-story":{startLoc:{col:27,line:214},endLoc:{col:1,line:219},startBody:{col:27,line:214},endBody:{col:1,line:219}},"selectable-nested-rows-usage-story":{startLoc:{col:41,line:251},endLoc:{col:1,line:256},startBody:{col:41,line:251},endBody:{col:1,line:256}},"nested-rows-initial-usage-story":{startLoc:{col:27,line:214},endLoc:{col:1,line:219},startBody:{col:27,line:214},endBody:{col:1,line:219}}}},styles:_storybook_styles.Z,docs:{page:function page(){return react.createElement(StoryDocsPage.r,{blocks:[{title:"Nested rows",description:"Nested rows allow disclosing content in data tables progressively by displaying primary data first (parent row) and enabling users to navigate secondary information levels (child rows).\n- Include the `useNestedRows` hook\n- Make sure that any row you want to have nested rows in your data has a `subRows` property with an array of objects for each nested row. The row expander will be included by default as long as the `useNestedRows` hook is provided and it is detected that a row has `subRows` within it.\n          ",source:{code:"\nconst datagridState = useDatagrid(\n  {\n    columns,\n    data,\n    expanderButtonTitleExpanded: 'Collapse row',\n    expanderButtonTitleCollapsed: 'Expand row',\n  },\n  useNestedRows\n);\n\nreturn <Datagrid datagridState={datagridState} />;\n            "}}]})}},layout:"fullscreen"},argTypes:{featureFlags:{table:{disable:!0}}}};var defaultHeader=[{Header:"Row Index",accessor:function accessor(row,i){return i},sticky:"left",id:"rowIndex"},{Header:"First Name",accessor:"firstName"},{Header:"Last Name",accessor:"lastName"},{Header:"Age",accessor:"age",width:50},{Header:"Visits",accessor:"visits",width:60},{Header:"Someone 1",accessor:"someone1"},{Header:"Someone 2",accessor:"someone2"},{Header:"Someone 3",accessor:"someone3"},{Header:"Someone 4",accessor:"someone4"},{Header:"Someone 5",accessor:"someone5"},{Header:"Someone 6",accessor:"someone6"},{Header:"Someone 7",accessor:"someone7"},{Header:"Someone 8",accessor:"someone8"},{Header:"Someone 9",accessor:"someone9"},{Header:"Someone 10",accessor:"someone10"}],sharedDatagridProps={emptyStateTitle:"Empty state title",emptyStateDescription:"Description text explaining why table is empty",emptyStateSize:"lg",gridTitle:"Data table title",gridDescription:"Additional information if needed",useDenseHeader:!1,rowSize:"lg",rowSizes:[{value:"xl",labelText:"Extra large"},{value:"lg",labelText:"Large"},{value:"md",labelText:"Medium"},{value:"xs",labelText:"Small"}],onRowSizeChange:function onRowSizeChange(value){console.log("row size changed to: ",value)},rowActions:[{id:"edit",itemText:"Edit",icon:bucket_5.I8,onClick:(0,dist.aD)("Clicked row action: edit")},{id:"delete",itemText:"Delete",icon:bucket_16.ZN,isDelete:!0,onClick:(0,dist.aD)("Clicked row action: delete")}]},nestedRowsControlProps={gridTitle:sharedDatagridProps.gridTitle,gridDescription:sharedDatagridProps.gridDescription,useDenseHeader:sharedDatagridProps.useDenseHeader,rowSize:sharedDatagridProps.rowSize,rowSizes:sharedDatagridProps.rowSizes,onRowSizeChange:sharedDatagridProps.onRowSizeChange},SingleLevelNestedRows=function SingleLevelNestedRows(_ref){var args=_extends({},(_objectDestructuringEmpty(_ref),_ref)),columns=react.useMemo((function(){return defaultHeader}),[]),data=_slicedToArray((0,react.useState)((0,makeData._l)(10,2)),1)[0],datagridState=(0,useDatagrid.Z)(NestedRows_stories_objectSpread({columns,data,DatagridActions:DatagridActions.D},args.defaultGridProps),Datagrid_useNestedRows);return react.createElement(Datagrid.c,{datagridState:NestedRows_stories_objectSpread({},datagridState)})},SingleLevelNestedRowsUsageStory=function SingleLevelNestedRowsWrapper(_ref2){var args=_extends({},(_objectDestructuringEmpty(_ref2),_ref2));return react.createElement(SingleLevelNestedRows,{defaultGridProps:NestedRows_stories_objectSpread({},args)})}.bind({});SingleLevelNestedRowsUsageStory.storyName="With single-level nested rows",SingleLevelNestedRowsUsageStory.argTypes={gridTitle:getArgTypes.u.gridTitle,gridDescription:getArgTypes.u.gridDescription,useDenseHeader:getArgTypes.u.useDenseHeader,rowSize:getArgTypes.u.rowSize,rowSizes:getArgTypes.u.rowSizes,onRowSizeChange:getArgTypes.u.onRowSizeChange,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},SingleLevelNestedRowsUsageStory.args=NestedRows_stories_objectSpread(NestedRows_stories_objectSpread({},nestedRowsControlProps),{},{featureFlags:["Datagrid.useNestedRows"]});var NestedRows=function NestedRows(_ref3){var args=_extends({},(_objectDestructuringEmpty(_ref3),_ref3)),columns=react.useMemo((function(){return defaultHeader}),[]),data=_slicedToArray((0,react.useState)((0,makeData._l)(10,5,2,2)),1)[0],datagridState=(0,useDatagrid.Z)(NestedRows_stories_objectSpread({columns,data,DatagridActions:DatagridActions.D},args.defaultGridProps),Datagrid_useNestedRows);return react.createElement(Datagrid.c,{datagridState:NestedRows_stories_objectSpread({},datagridState)})},BasicTemplateWrapper=function BasicTemplateWrapper(_ref4){var args=_extends({},(_objectDestructuringEmpty(_ref4),_ref4));return react.createElement(NestedRows,{defaultGridProps:NestedRows_stories_objectSpread({},args)})},NestedRowsUsageStory=BasicTemplateWrapper.bind({});NestedRowsUsageStory.storyName="With nested rows",NestedRowsUsageStory.argTypes={gridTitle:getArgTypes.u.gridTitle,gridDescription:getArgTypes.u.gridDescription,useDenseHeader:getArgTypes.u.useDenseHeader,rowSize:getArgTypes.u.rowSize,rowSizes:getArgTypes.u.rowSizes,onRowSizeChange:getArgTypes.u.onRowSizeChange,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},NestedRowsUsageStory.args=NestedRows_stories_objectSpread({},nestedRowsControlProps);var SelectableNestedRows=function SelectableNestedRows(_ref5){var args=_extends({},(_objectDestructuringEmpty(_ref5),_ref5)),columns=react.useMemo((function(){return defaultHeader}),[]),data=_slicedToArray((0,react.useState)((0,makeData._l)(10,5,2,2)),1)[0],datagridState=(0,useDatagrid.Z)(NestedRows_stories_objectSpread({columns,data,DatagridActions:DatagridActions.D},args.defaultGridProps),Datagrid_useNestedRows,useSelectRows.Z);return react.createElement(Datagrid.c,{datagridState:NestedRows_stories_objectSpread({},datagridState)})},SelectableNestedRowsUsageStory=function SelectableNestedRowTemplateWrapper(_ref6){var args=_extends({},(_objectDestructuringEmpty(_ref6),_ref6));return react.createElement(SelectableNestedRows,{defaultGridProps:NestedRows_stories_objectSpread({},args)})}.bind({});SelectableNestedRowsUsageStory.storyName="With selectable nested rows",SelectableNestedRowsUsageStory.argTypes={gridTitle:getArgTypes.u.gridTitle,gridDescription:getArgTypes.u.gridDescription,useDenseHeader:getArgTypes.u.useDenseHeader,rowSize:getArgTypes.u.rowSize,rowSizes:getArgTypes.u.rowSizes,onRowSizeChange:getArgTypes.u.onRowSizeChange,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},SelectableNestedRowsUsageStory.args=NestedRows_stories_objectSpread({},nestedRowsControlProps);var NestedRowsInitialUsageStory=BasicTemplateWrapper.bind({});NestedRowsInitialUsageStory.storyName="With initially expanded nested rows",NestedRowsInitialUsageStory.argTypes={gridTitle:getArgTypes.u.gridTitle,gridDescription:getArgTypes.u.gridDescription,useDenseHeader:getArgTypes.u.useDenseHeader,rowSize:getArgTypes.u.rowSize,rowSizes:getArgTypes.u.rowSizes,onRowSizeChange:getArgTypes.u.onRowSizeChange,expanderButtonTitleExpanded:"Collapse row",expanderButtonTitleCollapsed:"Expand row"},NestedRowsInitialUsageStory.args=NestedRows_stories_objectSpread(NestedRows_stories_objectSpread({},nestedRowsControlProps),{},{initialState:{expandedRowIds:{1:!0,3:!0}}}),SingleLevelNestedRowsUsageStory.parameters={...SingleLevelNestedRowsUsageStory.parameters,docs:{...SingleLevelNestedRowsUsageStory.parameters?.docs,source:{originalSource:"({\n  ...args\n}) => {\n  return <SingleLevelNestedRows defaultGridProps={{\n    ...args\n  }} />;\n}",...SingleLevelNestedRowsUsageStory.parameters?.docs?.source}}},NestedRowsUsageStory.parameters={...NestedRowsUsageStory.parameters,docs:{...NestedRowsUsageStory.parameters?.docs,source:{originalSource:"({\n  ...args\n}) => {\n  return <NestedRows defaultGridProps={{\n    ...args\n  }} />;\n}",...NestedRowsUsageStory.parameters?.docs?.source}}},SelectableNestedRowsUsageStory.parameters={...SelectableNestedRowsUsageStory.parameters,docs:{...SelectableNestedRowsUsageStory.parameters?.docs,source:{originalSource:"({\n  ...args\n}) => {\n  return <SelectableNestedRows defaultGridProps={{\n    ...args\n  }} />;\n}",...SelectableNestedRowsUsageStory.parameters?.docs?.source}}},NestedRowsInitialUsageStory.parameters={...NestedRowsInitialUsageStory.parameters,docs:{...NestedRowsInitialUsageStory.parameters?.docs,source:{originalSource:"({\n  ...args\n}) => {\n  return <NestedRows defaultGridProps={{\n    ...args\n  }} />;\n}",...NestedRowsInitialUsageStory.parameters?.docs?.source}}};const __namedExportsOrder=["SingleLevelNestedRowsUsageStory","NestedRowsUsageStory","SelectableNestedRowsUsageStory","NestedRowsInitialUsageStory"]}}]);