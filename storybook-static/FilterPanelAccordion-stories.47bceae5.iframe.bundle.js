"use strict";(self.webpackChunk_carbon_ibm_cloud_cognitive_core=self.webpackChunk_carbon_ibm_cloud_cognitive_core||[]).push([[1930],{"../ibm-products/src/components/FilterPanel/FilterPanelAccordion/FilterPanelAccordion.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>FilterPanelAccordion_stories});var react=__webpack_require__("../../node_modules/react/index.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs"),FilterPanel=__webpack_require__("../ibm-products/src/components/FilterPanel/FilterPanel.js"),FilterPanelAccordionItem=__webpack_require__("../ibm-products/src/components/FilterPanel/FilterPanelAccordionItem/FilterPanelAccordionItem.js"),FilterPanelCheckbox=__webpack_require__("../ibm-products/src/components/FilterPanel/FilterPanelCheckbox/FilterPanelCheckbox.js"),FilterPanelAccordion=__webpack_require__("../ibm-products/src/components/FilterPanel/FilterPanelAccordion/FilterPanelAccordion.js"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/@mdx-js/react/lib/index.js"),addon_docs_dist=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/index.mjs");function _createMdxContent(props){const _components=Object.assign({h1:"h1",h2:"h2",ul:"ul",li:"li",a:"a",p:"p",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h1,{id:"filterpanelaccordion",children:"FilterPanelAccordion"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#overview",children:"Overview"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#example-usage",children:"Example usage"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#component-api",children:"Component API"})}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"overview",children:"Overview"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The ",(0,jsx_runtime.jsx)(_components.code,{children:"FilterPanelAccordion"})," is a container required for grouping\n",(0,jsx_runtime.jsx)(_components.code,{children:"FilterPanelAccordionItems"})," with a label and optional count."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"example-usage",children:"Example usage"}),"\n",(0,jsx_runtime.jsx)(addon_docs_dist.Xz,{children:(0,jsx_runtime.jsx)(addon_docs_dist.oG,{of:Default})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"component-api",children:"Component API"}),"\n",(0,jsx_runtime.jsx)(addon_docs_dist.$4,{})]})}const FilterPanelAccordion_FilterPanelAccordion=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)};var uuidv4=__webpack_require__("../ibm-products/src/global/js/utils/uuidv4.js"),_storybook_styles=__webpack_require__("../ibm-products/src/components/FilterPanel/_storybook-styles.scss");const FilterPanelAccordion_stories={title:"IBM Products/Components/Filter panel/FilterPanelAccordion",component:FilterPanelAccordion.p,tags:["autodocs"],parameters:{storySource:{source:"/**\n * Copyright IBM Corp. 2024, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { FilterPanel, FilterPanelAccordionItem, FilterPanelCheckbox } from '..';\nimport { FilterPanelAccordion } from '.';\nimport mdx from './FilterPanelAccordion.mdx';\nimport uuidv4 from '../../../global/js/utils/uuidv4';\nimport styles from '../_storybook-styles.scss';\nvar storyClass = 'filter-panel-stories';\nexport default {\n  title: 'IBM Products/Components/Filter panel/FilterPanelAccordion',\n  component: FilterPanelAccordion,\n  tags: ['autodocs'],\n  parameters: {\n    styles: styles,\n    docs: {\n      page: mdx\n    }\n  },\n  argTypes: {\n    children: {\n      table: {\n        disable: true\n      }\n    },\n    className: {\n      control: {\n        type: {}\n      }\n    },\n    count: {\n      control: {\n        type: 'select',\n        labels: {\n          0: 'No value',\n          1: 'As number: 10',\n          2: 'As string: \"1,500\"'\n        }\n      },\n      mapping: {\n        0: undefined,\n        1: 10,\n        2: '1,500'\n      },\n      options: [0, 1, 2]\n    },\n    labelText: {\n      control: {\n        type: 'select',\n        labels: {\n          0: 'Plain text',\n          1: 'Very long text',\n          2: 'Using markup'\n        }\n      },\n      mapping: {\n        0: 'Accordion name',\n        1: 'Really, really long accordion name',\n        2: /*#__PURE__*/React.createElement(React.Fragment, null, \"Formatted\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: 'normal'\n          }\n        }, /*#__PURE__*/React.createElement(\"em\", null, \"accordion\"), \" label\"))\n      },\n      options: [0, 1, 2]\n    }\n  },\n  args: {\n    count: 1,\n    labelText: 0\n  }\n};\nvar Template = function Template(args) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(storyClass, \"__viewport\")\n  }, /*#__PURE__*/React.createElement(FilterPanel, null, /*#__PURE__*/React.createElement(FilterPanelAccordion, args, /*#__PURE__*/React.createElement(FilterPanelAccordionItem, {\n    labelText: \"Accordion item\",\n    count: 10,\n    accordionItemProps: {\n      onHeadingClick: function onHeadingClick(_ref) {\n        var isOpen = _ref.isOpen,\n          event = _ref.event;\n        action('onHeadingClick ({ isOpen, event })')(isOpen, event);\n      }\n    }\n  }, /*#__PURE__*/React.createElement(FilterPanelCheckbox, {\n    count: 10,\n    labelText: \"Checkbox\"\n    // \"id\" and \"onChange\" are pass-through props to Carbon's Checkbox.\n    ,\n    id: uuidv4(),\n    onChange: function onChange(event, _ref2) {\n      var checked = _ref2.checked,\n        id = _ref2.id;\n      return action('onChange Checkbox (event, { checked, id })')(event, checked, id);\n    }\n  })))));\n};\nexport var Default = Template.bind({});\nDefault.storyName = 'Default';\nDefault.args = {\n  title: ''\n};",locationsMap:{default:{startLoc:{col:15,line:79},endLoc:{col:1,line:104},startBody:{col:15,line:79},endBody:{col:1,line:104}}}},styles:_storybook_styles.Z,docs:{page:FilterPanelAccordion_FilterPanelAccordion}},argTypes:{children:{table:{disable:!0}},className:{control:{type:{}}},count:{control:{type:"select",labels:{0:"No value",1:"As number: 10",2:'As string: "1,500"'}},mapping:{0:void 0,1:10,2:"1,500"},options:[0,1,2]},labelText:{control:{type:"select",labels:{0:"Plain text",1:"Very long text",2:"Using markup"}},mapping:{0:"Accordion name",1:"Really, really long accordion name",2:react.createElement(react.Fragment,null,"Formatted"," ",react.createElement("span",{style:{fontWeight:"normal"}},react.createElement("em",null,"accordion")," label"))},options:[0,1,2]}},args:{count:1,labelText:0}};var Default=function Template(args){return react.createElement("div",{className:"".concat("filter-panel-stories","__viewport")},react.createElement(FilterPanel.h,null,react.createElement(FilterPanelAccordion.p,args,react.createElement(FilterPanelAccordionItem.Q,{labelText:"Accordion item",count:10,accordionItemProps:{onHeadingClick:function onHeadingClick(_ref){var isOpen=_ref.isOpen,event=_ref.event;(0,dist.aD)("onHeadingClick ({ isOpen, event })")(isOpen,event)}}},react.createElement(FilterPanelCheckbox.t,{count:10,labelText:"Checkbox",id:(0,uuidv4.Z)(),onChange:function onChange(event,_ref2){var checked=_ref2.checked,id=_ref2.id;return(0,dist.aD)("onChange Checkbox (event, { checked, id })")(event,checked,id)}})))))}.bind({});Default.storyName="Default",Default.args={title:""},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  return <div className={`${storyClass}__viewport`}>\n      <FilterPanel>\n        <FilterPanelAccordion {...args}>\n          <FilterPanelAccordionItem labelText="Accordion item" count={10} accordionItemProps={{\n          onHeadingClick: ({\n            isOpen,\n            event\n          }) => {\n            action(\'onHeadingClick ({ isOpen, event })\')(isOpen, event);\n          }\n        }}>\n            <FilterPanelCheckbox count={10} labelText="Checkbox"\n          // "id" and "onChange" are pass-through props to Carbon\'s Checkbox.\n          id={uuidv4()} onChange={(event, {\n            checked,\n            id\n          }) => action(\'onChange Checkbox (event, { checked, id })\')(event, checked, id)} />\n          </FilterPanelAccordionItem>\n        </FilterPanelAccordion>\n      </FilterPanel>\n    </div>;\n}',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);