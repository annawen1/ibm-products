import{u as A,c as v,_ as H}from"./deprecate-BLSDO8J_.js";import{P as e}from"./index-BRV0Se7Z.js";import{R as I,r as i}from"./index-CTjT7uj6.js";import{T as O}from"./Text-CJa2B8Yb.js";import{p as C,j as T,B,c as z}from"./settings-CRrTVbgr.js";import{g as D}from"./devtools-BECPDnEK.js";function W(a){let{className:p,children:u,...h}=a;const f=A(),y=v(`${f}--list__item`,p);return I.createElement(O,H({as:"li",className:y},h),u)}W.propTypes={children:e.node,className:e.string};const l=`${C.prefix}--truncated-list`,w="TruncatedList",r={as:"ul",collapsedItemsLimit:5,expandedItemsLimit:10,onClick:()=>{},viewLessLabel:"View less",viewMoreLabel:a=>`View more (${a})`};let o=I.forwardRef(({children:a,className:p,as:u=r.as,buttonClassName:h,collapsedItemsLimit:f=r.collapsedItemsLimit,expandedItemsLimit:y=r.expandedItemsLimit,onClick:x=r.onClick,viewLessLabel:R=r.viewLessLabel,viewMoreLabel:k=r.viewMoreLabel,...q},E)=>{const s=i.Children.toArray(a),n=Math.max(f,1),g=Math.min(y,s.length),[t,V]=i.useState(!0),[_,$]=i.useState(n*16),m=i.useRef(),M=()=>{V(d=>!d)};return i.useEffect(()=>{x(t)},[t,x]),i.useEffect(()=>{var d,L;if(m&&s.length>0){const P=t?n:g,b=(d=m.current)==null?void 0:d.childNodes;let N=0;for(let c=0;c<P;c++)if(b&&b[c]){const S=b[c],j=((L=window==null?void 0:window.getComputedStyle(S))==null?void 0:L.height)||"16";N+=parseInt(j)}$(N)}},[s,n,g,t,m]),T.jsxs("div",{...q,className:v(l,p,t?`${l}--collapsed`:`${l}--expanded`,!t&&s.length<=g&&`${l}--expanded-all`),ref:E,...D(w),children:[T.jsx(u,{className:`${l}__list`,ref:m,style:{height:_},children:t?s.slice(0,n):a}),s.length>n&&T.jsx(B,{className:v(`${l}__button`,`${z.prefix}--link`,h),kind:"ghost",size:"sm",onClick:M,children:t?k(s.length-n):R})]})});o=C.checkComponentEnabled(o,w);o.displayName=w;o.propTypes={as:e.oneOfType([e.elementType,e.string]),buttonClassName:e.string,children:e.node.isRequired,className:e.string,collapsedItemsLimit:e.number,expandedItemsLimit:e.number,onClick:e.func,viewLessLabel:e.string,viewMoreLabel:e.func};o.__docgenInfo={description:"The `TruncatedList` allows consumers to control how many items are\nrevealed to the user while giving the user the ability to expand\nand see the entire list.",methods:[],displayName:"TruncatedList",props:{as:{required:!1,tsType:{name:"union",raw:"React.ElementType | string",elements:[{name:"ReactElementType",raw:"React.ElementType"},{name:"string"}]},description:"The type of list element to render.\nThis could be a `ul`, `ol`, or a custom React component.",defaultValue:{value:"'ul'",computed:!1},type:{name:"union",value:[{name:"elementType"},{name:"string"}]}},buttonClassName:{required:!1,tsType:{name:"string"},description:"Optional class name for expand/collapse button.",type:{name:"string"}},children:{required:!0,tsType:{name:"ReactNode"},description:"The contents of the TruncatedList.",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"Provide an optional class to be applied to the containing node.",type:{name:"string"}},collapsedItemsLimit:{required:!1,tsType:{name:"number"},description:`Number of items to render and display when the list is truncated and collapsed.
Scrolling is not enabled when collapsed. The smallest number is 1.`,defaultValue:{value:"5",computed:!1},type:{name:"number"}},expandedItemsLimit:{required:!1,tsType:{name:"number"},description:`Maximum number of items to show when the list is expanded. All
items are rendered when the list is expanded. Scrolling is enabled
if there are more items to display than this number.`,defaultValue:{value:"10",computed:!1},type:{name:"number"}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: any) => void",signature:{arguments:[{type:{name:"any"},name:"value"}],return:{name:"void"}}},description:"Optional callback reports the collapsed state of the list.",defaultValue:{value:"() => {}",computed:!1},type:{name:"func"}},viewLessLabel:{required:!1,tsType:{name:"string"},description:"Text label for when the list is expanded.",defaultValue:{value:"'View less'",computed:!1},type:{name:"string"}},viewMoreLabel:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: any) => void",signature:{arguments:[{type:{name:"any"},name:"value"}],return:{name:"void"}}},description:"Callback function for building the label when the list is collapsed.",defaultValue:{value:"(value) => `View more (${value})`",computed:!1},type:{name:"func"}}},composes:["PropsWithChildren"]};export{W as L,o as T};
