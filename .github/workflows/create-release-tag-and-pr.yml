# Creates and pushes release tag, then creates release notes from the changelogs.
# Creates PR to merge changelog and version bump updates from release to main branch
name: Create github tag and PR

on:
  workflow_dispatch:
    inputs:
      tag:
        # Recently published version
        required: true
        description: 'release tag'
        type: string
        default: 2.46.0-rc.0
      previous-tag:
        # Previous release tag to grab changelogs from
        required: true
        description: 'previous release tag'
        type: string
        default: '2.45.0'
      create-pr:
        # set to true to create PR to merge changes from release to `main` branch
        required: true
        description: 'Create PR?'
        type: boolean
        default: true

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    if: github.event.inputs.create-pr == 'true'
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
        with:
          fetch-depth: '0'
      # Create a new branch off the release branch for the PR, we do this to ensure the release branch
      # is not affected
      - name: Create branch
        run: |
          git checkout -b chore/${{ github.event.inputs.tag }}-release
          git push origin chore/${{ github.event.inputs.tag }}-release
      # Create PR with the new branch
      - name: Create Pull Request
        run: |
          gh pr create -B main -H chore/${{ github.event.inputs.tag }}-release --title 'chore(release): ${{ github.event.inputs.tag }}' --body 'Automated release PR for ${{ github.event.inputs.tag }}

            **Checklist**

            - [ ] Verify package version bumps are accurate
            - [ ] Verify CI passes as expected'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea #v7.0.1
        with:
          script: |
            github.rest.repos.createRelease({
              tag_name: context.ref,
              name: '${{ github.ref_name }}',
              draft: false,
              prerelease: true,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
